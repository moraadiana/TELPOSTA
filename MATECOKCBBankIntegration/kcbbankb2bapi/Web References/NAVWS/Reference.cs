//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace b2b.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="KCBBankIntergration_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration")]
    public partial class KCBBankIntergration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayTransFinalOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTransactionNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostKCBTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionCodeExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public KCBBankIntergration() {
            this.Url = global::b2b.Properties.Settings.Default.b2b_NAVWS_KCBBankIntergration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountDetailsCompletedEventHandler GetAccountDetailsCompleted;
        
        /// <remarks/>
        public event GetPayTransFinalCompletedEventHandler GetPayTransFinalCompleted;
        
        /// <remarks/>
        public event InsertTransactionNotificationCompletedEventHandler InsertTransactionNotificationCompleted;
        
        /// <remarks/>
        public event PostKCBTransactionCompletedEventHandler PostKCBTransactionCompleted;
        
        /// <remarks/>
        public event TransactionCodeExistsCompletedEventHandler TransactionCodeExistsCompleted;
        
        /// <remarks/>
        public event ValidateAccountCompletedEventHandler ValidateAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:GetAccountDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="GetAccountDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAccountDetails(string accno) {
            object[] results = this.Invoke("GetAccountDetails", new object[] {
                        accno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string accno) {
            this.GetAccountDetailsAsync(accno, null);
        }
        
        /// <remarks/>
        public void GetAccountDetailsAsync(string accno, object userState) {
            if ((this.GetAccountDetailsOperationCompleted == null)) {
                this.GetAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAccountDetails", new object[] {
                        accno}, this.GetAccountDetailsOperationCompleted, userState);
        }
        
        private void OnGetAccountDetailsOperationCompleted(object arg) {
            if ((this.GetAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountDetailsCompleted(this, new GetAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:GetPayTransFinal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="GetPayTransFinal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPayTransFinal(string inbankreference, string indebitaccount, string intransactionDate, string inbillAmount, string inpaymentMode, string inphonenumber, string incustomerRefNumber, string indebitcustname) {
            object[] results = this.Invoke("GetPayTransFinal", new object[] {
                        inbankreference,
                        indebitaccount,
                        intransactionDate,
                        inbillAmount,
                        inpaymentMode,
                        inphonenumber,
                        incustomerRefNumber,
                        indebitcustname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayTransFinalAsync(string inbankreference, string indebitaccount, string intransactionDate, string inbillAmount, string inpaymentMode, string inphonenumber, string incustomerRefNumber, string indebitcustname) {
            this.GetPayTransFinalAsync(inbankreference, indebitaccount, intransactionDate, inbillAmount, inpaymentMode, inphonenumber, incustomerRefNumber, indebitcustname, null);
        }
        
        /// <remarks/>
        public void GetPayTransFinalAsync(string inbankreference, string indebitaccount, string intransactionDate, string inbillAmount, string inpaymentMode, string inphonenumber, string incustomerRefNumber, string indebitcustname, object userState) {
            if ((this.GetPayTransFinalOperationCompleted == null)) {
                this.GetPayTransFinalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayTransFinalOperationCompleted);
            }
            this.InvokeAsync("GetPayTransFinal", new object[] {
                        inbankreference,
                        indebitaccount,
                        intransactionDate,
                        inbillAmount,
                        inpaymentMode,
                        inphonenumber,
                        incustomerRefNumber,
                        indebitcustname}, this.GetPayTransFinalOperationCompleted, userState);
        }
        
        private void OnGetPayTransFinalOperationCompleted(object arg) {
            if ((this.GetPayTransFinalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayTransFinalCompleted(this, new GetPayTransFinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:InsertTransactionNoti" +
            "fication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="InsertTransactionNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertTransactionNotification(string ftReference, string transactionDate, decimal amount, string transactionStatus, string transactionMessage, string beneficiaryAccountNumber, string debitAccountNumber, string beneficiaryName, string transactionReference, string merchantId) {
            object[] results = this.Invoke("InsertTransactionNotification", new object[] {
                        ftReference,
                        transactionDate,
                        amount,
                        transactionStatus,
                        transactionMessage,
                        beneficiaryAccountNumber,
                        debitAccountNumber,
                        beneficiaryName,
                        transactionReference,
                        merchantId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTransactionNotificationAsync(string ftReference, string transactionDate, decimal amount, string transactionStatus, string transactionMessage, string beneficiaryAccountNumber, string debitAccountNumber, string beneficiaryName, string transactionReference, string merchantId) {
            this.InsertTransactionNotificationAsync(ftReference, transactionDate, amount, transactionStatus, transactionMessage, beneficiaryAccountNumber, debitAccountNumber, beneficiaryName, transactionReference, merchantId, null);
        }
        
        /// <remarks/>
        public void InsertTransactionNotificationAsync(string ftReference, string transactionDate, decimal amount, string transactionStatus, string transactionMessage, string beneficiaryAccountNumber, string debitAccountNumber, string beneficiaryName, string transactionReference, string merchantId, object userState) {
            if ((this.InsertTransactionNotificationOperationCompleted == null)) {
                this.InsertTransactionNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTransactionNotificationOperationCompleted);
            }
            this.InvokeAsync("InsertTransactionNotification", new object[] {
                        ftReference,
                        transactionDate,
                        amount,
                        transactionStatus,
                        transactionMessage,
                        beneficiaryAccountNumber,
                        debitAccountNumber,
                        beneficiaryName,
                        transactionReference,
                        merchantId}, this.InsertTransactionNotificationOperationCompleted, userState);
        }
        
        private void OnInsertTransactionNotificationOperationCompleted(object arg) {
            if ((this.InsertTransactionNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTransactionNotificationCompleted(this, new InsertTransactionNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:PostKCBTransaction", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="PostKCBTransaction_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PostKCBTransaction(string transcode, string transdate, decimal amount, string accno, string accname, string transtype, string mssidn, string shortcode, decimal accbal, string narration) {
            object[] results = this.Invoke("PostKCBTransaction", new object[] {
                        transcode,
                        transdate,
                        amount,
                        accno,
                        accname,
                        transtype,
                        mssidn,
                        shortcode,
                        accbal,
                        narration});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PostKCBTransactionAsync(string transcode, string transdate, decimal amount, string accno, string accname, string transtype, string mssidn, string shortcode, decimal accbal, string narration) {
            this.PostKCBTransactionAsync(transcode, transdate, amount, accno, accname, transtype, mssidn, shortcode, accbal, narration, null);
        }
        
        /// <remarks/>
        public void PostKCBTransactionAsync(string transcode, string transdate, decimal amount, string accno, string accname, string transtype, string mssidn, string shortcode, decimal accbal, string narration, object userState) {
            if ((this.PostKCBTransactionOperationCompleted == null)) {
                this.PostKCBTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostKCBTransactionOperationCompleted);
            }
            this.InvokeAsync("PostKCBTransaction", new object[] {
                        transcode,
                        transdate,
                        amount,
                        accno,
                        accname,
                        transtype,
                        mssidn,
                        shortcode,
                        accbal,
                        narration}, this.PostKCBTransactionOperationCompleted, userState);
        }
        
        private void OnPostKCBTransactionOperationCompleted(object arg) {
            if ((this.PostKCBTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostKCBTransactionCompleted(this, new PostKCBTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:TransactionCodeExists" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="TransactionCodeExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool TransactionCodeExists(string incustomerRefNumber) {
            object[] results = this.Invoke("TransactionCodeExists", new object[] {
                        incustomerRefNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionCodeExistsAsync(string incustomerRefNumber) {
            this.TransactionCodeExistsAsync(incustomerRefNumber, null);
        }
        
        /// <remarks/>
        public void TransactionCodeExistsAsync(string incustomerRefNumber, object userState) {
            if ((this.TransactionCodeExistsOperationCompleted == null)) {
                this.TransactionCodeExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionCodeExistsOperationCompleted);
            }
            this.InvokeAsync("TransactionCodeExists", new object[] {
                        incustomerRefNumber}, this.TransactionCodeExistsOperationCompleted, userState);
        }
        
        private void OnTransactionCodeExistsOperationCompleted(object arg) {
            if ((this.TransactionCodeExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionCodeExistsCompleted(this, new TransactionCodeExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration:ValidateAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", ResponseElementName="ValidateAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KCBBankIntergration", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateAccount(string incustomerRefNumber) {
            object[] results = this.Invoke("ValidateAccount", new object[] {
                        incustomerRefNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAccountAsync(string incustomerRefNumber) {
            this.ValidateAccountAsync(incustomerRefNumber, null);
        }
        
        /// <remarks/>
        public void ValidateAccountAsync(string incustomerRefNumber, object userState) {
            if ((this.ValidateAccountOperationCompleted == null)) {
                this.ValidateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAccountOperationCompleted);
            }
            this.InvokeAsync("ValidateAccount", new object[] {
                        incustomerRefNumber}, this.ValidateAccountOperationCompleted, userState);
        }
        
        private void OnValidateAccountOperationCompleted(object arg) {
            if ((this.ValidateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAccountCompleted(this, new ValidateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAccountDetailsCompletedEventHandler(object sender, GetAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPayTransFinalCompletedEventHandler(object sender, GetPayTransFinalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayTransFinalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayTransFinalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertTransactionNotificationCompletedEventHandler(object sender, InsertTransactionNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTransactionNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTransactionNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PostKCBTransactionCompletedEventHandler(object sender, PostKCBTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostKCBTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostKCBTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TransactionCodeExistsCompletedEventHandler(object sender, TransactionCodeExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionCodeExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionCodeExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ValidateAccountCompletedEventHandler(object sender, ValidateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591