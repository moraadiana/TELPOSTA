@model MembersPortal.viewmodel.PensionUpdateVM

@{
    ViewBag.Title = "Update Pension Banking Details";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container mt-4 p-4 shadow-lg" style="background-color: #f0ffff; border-radius: 10px;">
    <!-- Current Pension Banking Details -->
    <div class="row justify-content-center mb-4">
        <h4 class="text-dark text-center mb-3"><strong><i class="bi-clipboard-plus"></i> Current Pension Banking Details</strong></h4>
        <hr />
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Bank Name</th>
                        <th>Bank Branch</th>
                        <th>Account Name</th>
                        <th>Account Number</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.BankDetails.Bank</td>
                        <td>@Model.BankDetails.Branch</td>
                        <td>@Model.BankDetails.BankAccName</td>
                        <td>@Model.BankDetails.BankAccNo</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Update Banking Details Form -->
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row mb-4">
            <h4 class="text-dark text-center mb-3"><strong><i class="bi-clipboard-plus"></i> Update Banking Details</strong></h4>
            <hr />
        </div>

        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Select Bank</label>
                @if (Model.BanksList != null)
                {
                    @Html.DropDownListFor(m => m.PensionInput.Bank,
                        new SelectList(Model.BanksList, "Value", "Text"),
                        new { @class = "form-select", required = "required", id = "bankcode", onchange = "handleBankCodeChange()" })
                }
            </div>

            <div class="col-md-3">
                <label class="form-label">Select Branch</label>
                @Html.DropDownListFor(m => m.PensionInput.Branch,
                    Enumerable.Empty<SelectListItem>(),
                    "-- Select Branch --",
                    new { @class = "form-select", required = "required", id = "branchcode" })
            </div>

            <div class="col-md-3">
                <label class="form-label">Account Number</label>
                @Html.TextBoxFor(model => model.PensionInput.BankAccNo,
                    new { @class = "form-control", type = "number", required = "required" })
                @Html.ValidationMessageFor(model => model.PensionInput.BankAccNo, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                <label class="form-label">Account Name</label>
                @Html.TextBoxFor(model => model.PensionInput.BankAccName,
                    new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.PensionInput.BankAccName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-12 text-center">
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-check-square-o"></i> Submit
                </button>
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@if (ViewBag.ErrorMessage != null)
{
    <script type="text/javascript">
     window.onload = function () {
         var message = '@ViewBag.ErrorMessage';
         var url = '@TempData["RedirectUrl"]';
         alert(message);
         window.location.href = url;
     };
    </script>
}
@if (ViewBag.SuccessMessage != null)
{
    <script type="text/javascript">
     window.onload = function () {
         var message = '@ViewBag.SuccessMessage';
         var url = '@TempData["RedirectUrl"]';
         alert(message);
         window.location.href = url;
     };
    </script>
}
<script>
    function handleBankCodeChange() {
        loadBankBranches();
    }

    function loadBankBranches() {
        var bankcode = $('#bankcode').val();
        if (bankcode) {
            $.ajax({
                url: '@Url.Action("GetBankBranches", "dashboard")',
                data: { bankcode: bankcode },
                type: 'GET',
                success: function (data) {
                    var branch = $('#branchcode');
                    branch.empty().append('<option value="">Select Branch Code</option>');
                    $.each(data, function (index, item) {
                        branch.append('<option value="' + item.Value + '">' + item.Text + '</option>');
                    });
                },
                error: function () {
                    alert('Error loading Branch Codes');
                }
            });
        } else {
            $('#branchcode').empty().append('<option value="">Select Branch Code</option>');
        }
    }
</script>

<style>
    /* Container */
    .container {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    /* Table */
    .table th,
    .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table-hover tbody tr:hover {
        background-color: #f0f8ff;
    }

    /* Labels */
    .form-label {
        font-weight: bold;
        font-size: 15px;
    }

    /* Buttons */
    .btn {
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
    }

    /* Headings */
    h4 {
        font-family: 'Roboto', sans-serif;
        font-weight: 700;
    }
</style>
