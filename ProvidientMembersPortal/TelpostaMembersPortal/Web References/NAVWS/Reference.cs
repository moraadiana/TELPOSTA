//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TelpostaMembersPortal.NAVWS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Portal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Portal")]
    public partial class Portal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RejectLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectPVOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectStoreReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveImprestReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback StaffPortalOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrusteeLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBeneficiaryPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberAutoGenPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberNSSFDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStaffPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidTrusteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCurrentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCurrentStaffPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmployeeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveClaimReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveImprestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveLeaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApprovePVOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveStoreReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback AvailableLeaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelClaimRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelImprestRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeBeneficiaryPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeMemberPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeStaffPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeTrusteePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBeneficiaryLoginForUnchangedPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBeneficiaryLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckBeneficiaryPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMemberLogin1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMemberLoginForUnchangedPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMemberLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMemberPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffLoginForUnchangedPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffPasswordChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStaffPortalLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidBeneficiaryNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidMemberNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidStaffNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPortalOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmStaffPortalOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIncludesNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineIfIsNonWorkingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DetermineLeaveReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateBeneficiaryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateBeneficiaryStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMemberDetailedStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMemberStatement1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMemberStatementNSSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMemberStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeneficiaryPFNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBeneficiaryProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultLeaveDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExtensionStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveAppCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberBeneficiariesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemberProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPayrollPeriodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostedLeavesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfilePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSponsorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStafBfProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrusteeEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrusteeNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrusteeProfileDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRLeaveExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestRequisitionApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestRequisitionCreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertApproverCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForUnchangedPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback PensionerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback PortalOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectClaimReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectImprestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portal() {
            this.Url = global::TelpostaMembersPortal.Properties.Settings.Default.TelpostaMembersPortal_NAVWS_Portal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RejectLeaveCompletedEventHandler RejectLeaveCompleted;
        
        /// <remarks/>
        public event RejectPVCompletedEventHandler RejectPVCompleted;
        
        /// <remarks/>
        public event RejectStoreReqCompletedEventHandler RejectStoreReqCompleted;
        
        /// <remarks/>
        public event RemoveImprestReqLineCompletedEventHandler RemoveImprestReqLineCompleted;
        
        /// <remarks/>
        public event StaffPortalOTPCompletedEventHandler StaffPortalOTPCompleted;
        
        /// <remarks/>
        public event TrusteeLoginCompletedEventHandler TrusteeLoginCompleted;
        
        /// <remarks/>
        public event UpdateBeneficiaryPassCompletedEventHandler UpdateBeneficiaryPassCompleted;
        
        /// <remarks/>
        public event UpdateMemberAutoGenPasswordCompletedEventHandler UpdateMemberAutoGenPasswordCompleted;
        
        /// <remarks/>
        public event UpdateMemberNSSFDateCompletedEventHandler UpdateMemberNSSFDateCompleted;
        
        /// <remarks/>
        public event UpdateMemberPassCompletedEventHandler UpdateMemberPassCompleted;
        
        /// <remarks/>
        public event UpdateMemberPasswordCompletedEventHandler UpdateMemberPasswordCompleted;
        
        /// <remarks/>
        public event UpdateStaffPassCompletedEventHandler UpdateStaffPassCompleted;
        
        /// <remarks/>
        public event ValidTrusteeCompletedEventHandler ValidTrusteeCompleted;
        
        /// <remarks/>
        public event ValidateStartDateCompletedEventHandler ValidateStartDateCompleted;
        
        /// <remarks/>
        public event VerifyCurrentPasswordCompletedEventHandler VerifyCurrentPasswordCompleted;
        
        /// <remarks/>
        public event VerifyCurrentStaffPasswordCompletedEventHandler VerifyCurrentStaffPasswordCompleted;
        
        /// <remarks/>
        public event getEmployeeNameCompletedEventHandler getEmployeeNameCompleted;
        
        /// <remarks/>
        public event ApproveClaimReqCompletedEventHandler ApproveClaimReqCompleted;
        
        /// <remarks/>
        public event ApproveImprestCompletedEventHandler ApproveImprestCompleted;
        
        /// <remarks/>
        public event ApproveLeaveCompletedEventHandler ApproveLeaveCompleted;
        
        /// <remarks/>
        public event ApprovePVCompletedEventHandler ApprovePVCompleted;
        
        /// <remarks/>
        public event ApproveStoreReqCompletedEventHandler ApproveStoreReqCompleted;
        
        /// <remarks/>
        public event AvailableLeaveDaysCompletedEventHandler AvailableLeaveDaysCompleted;
        
        /// <remarks/>
        public event CalcEndDateCompletedEventHandler CalcEndDateCompleted;
        
        /// <remarks/>
        public event CalcReturnDateCompletedEventHandler CalcReturnDateCompleted;
        
        /// <remarks/>
        public event CancelClaimRequisitionCompletedEventHandler CancelClaimRequisitionCompleted;
        
        /// <remarks/>
        public event CancelImprestRequisitionCompletedEventHandler CancelImprestRequisitionCompleted;
        
        /// <remarks/>
        public event CancelLeaveApplicationCompletedEventHandler CancelLeaveApplicationCompleted;
        
        /// <remarks/>
        public event ChangeBeneficiaryPasswordCompletedEventHandler ChangeBeneficiaryPasswordCompleted;
        
        /// <remarks/>
        public event ChangeMemberPasswordCompletedEventHandler ChangeMemberPasswordCompleted;
        
        /// <remarks/>
        public event ChangeStaffPasswordCompletedEventHandler ChangeStaffPasswordCompleted;
        
        /// <remarks/>
        public event ChangeTrusteePasswordCompletedEventHandler ChangeTrusteePasswordCompleted;
        
        /// <remarks/>
        public event CheckBeneficiaryLoginForUnchangedPassCompletedEventHandler CheckBeneficiaryLoginForUnchangedPassCompleted;
        
        /// <remarks/>
        public event CheckBeneficiaryLoginCompletedEventHandler CheckBeneficiaryLoginCompleted;
        
        /// <remarks/>
        public event CheckBeneficiaryPasswordChangedCompletedEventHandler CheckBeneficiaryPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckMemberLogin1CompletedEventHandler CheckMemberLogin1Completed;
        
        /// <remarks/>
        public event CheckMemberLoginForUnchangedPassCompletedEventHandler CheckMemberLoginForUnchangedPassCompleted;
        
        /// <remarks/>
        public event CheckMemberLoginCompletedEventHandler CheckMemberLoginCompleted;
        
        /// <remarks/>
        public event CheckMemberPasswordChangedCompletedEventHandler CheckMemberPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckStaffLoginForUnchangedPassCompletedEventHandler CheckStaffLoginForUnchangedPassCompleted;
        
        /// <remarks/>
        public event CheckStaffLoginCompletedEventHandler CheckStaffLoginCompleted;
        
        /// <remarks/>
        public event CheckStaffPasswordChangedCompletedEventHandler CheckStaffPasswordChangedCompleted;
        
        /// <remarks/>
        public event CheckStaffPortalLoginCompletedEventHandler CheckStaffPortalLoginCompleted;
        
        /// <remarks/>
        public event CheckValidBeneficiaryNoCompletedEventHandler CheckValidBeneficiaryNoCompleted;
        
        /// <remarks/>
        public event CheckValidMemberNoCompletedEventHandler CheckValidMemberNoCompleted;
        
        /// <remarks/>
        public event CheckValidStaffNoCompletedEventHandler CheckValidStaffNoCompleted;
        
        /// <remarks/>
        public event ClaimRequisitionApprovalRequestCompletedEventHandler ClaimRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event ClaimRequisitionCreateCompletedEventHandler ClaimRequisitionCreateCompleted;
        
        /// <remarks/>
        public event ConfirmPortalOTPCompletedEventHandler ConfirmPortalOTPCompleted;
        
        /// <remarks/>
        public event ConfirmStaffPortalOTPCompletedEventHandler ConfirmStaffPortalOTPCompleted;
        
        /// <remarks/>
        public event DetermineIfIncludesNonWorkingCompletedEventHandler DetermineIfIncludesNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineIfIsNonWorkingCompletedEventHandler DetermineIfIsNonWorkingCompleted;
        
        /// <remarks/>
        public event DetermineLeaveReturnDateCompletedEventHandler DetermineLeaveReturnDateCompleted;
        
        /// <remarks/>
        public event FnAttachmentsCompletedEventHandler FnAttachmentsCompleted;
        
        /// <remarks/>
        public event GenerateBeneficiaryReportCompletedEventHandler GenerateBeneficiaryReportCompleted;
        
        /// <remarks/>
        public event GenerateBeneficiaryStatementCompletedEventHandler GenerateBeneficiaryStatementCompleted;
        
        /// <remarks/>
        public event GenerateLeaveStatementCompletedEventHandler GenerateLeaveStatementCompleted;
        
        /// <remarks/>
        public event GenerateMemberDetailedStatementCompletedEventHandler GenerateMemberDetailedStatementCompleted;
        
        /// <remarks/>
        public event GenerateMemberStatement1CompletedEventHandler GenerateMemberStatement1Completed;
        
        /// <remarks/>
        public event GenerateMemberStatementNSSFCompletedEventHandler GenerateMemberStatementNSSFCompleted;
        
        /// <remarks/>
        public event GenerateMemberStatementCompletedEventHandler GenerateMemberStatementCompleted;
        
        /// <remarks/>
        public event GetBeneficiaryPFNoCompletedEventHandler GetBeneficiaryPFNoCompleted;
        
        /// <remarks/>
        public event GetBeneficiaryProfileDetailsCompletedEventHandler GetBeneficiaryProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetClaimsCountCompletedEventHandler GetClaimsCountCompleted;
        
        /// <remarks/>
        public event GetCurrentPasswordCompletedEventHandler GetCurrentPasswordCompleted;
        
        /// <remarks/>
        public event GetDefaultLeaveDaysCompletedEventHandler GetDefaultLeaveDaysCompleted;
        
        /// <remarks/>
        public event GetExtensionStartDateCompletedEventHandler GetExtensionStartDateCompleted;
        
        /// <remarks/>
        public event GetImprestCountCompletedEventHandler GetImprestCountCompleted;
        
        /// <remarks/>
        public event GetLeaveAppCountCompletedEventHandler GetLeaveAppCountCompleted;
        
        /// <remarks/>
        public event GetMemberBeneficiariesCompletedEventHandler GetMemberBeneficiariesCompleted;
        
        /// <remarks/>
        public event GetMemberEmailCompletedEventHandler GetMemberEmailCompleted;
        
        /// <remarks/>
        public event GetMemberGenderCompletedEventHandler GetMemberGenderCompleted;
        
        /// <remarks/>
        public event GetMemberMailCompletedEventHandler GetMemberMailCompleted;
        
        /// <remarks/>
        public event GetMemberNameCompletedEventHandler GetMemberNameCompleted;
        
        /// <remarks/>
        public event GetMemberProfileDetailsCompletedEventHandler GetMemberProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetPayrollPeriodsCompletedEventHandler GetPayrollPeriodsCompleted;
        
        /// <remarks/>
        public event GetPostedLeavesCompletedEventHandler GetPostedLeavesCompleted;
        
        /// <remarks/>
        public event GetProfilePictureCompletedEventHandler GetProfilePictureCompleted;
        
        /// <remarks/>
        public event GetSponsorNameCompletedEventHandler GetSponsorNameCompleted;
        
        /// <remarks/>
        public event GetStafBfProfileDetailsCompletedEventHandler GetStafBfProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetStaffMailCompletedEventHandler GetStaffMailCompleted;
        
        /// <remarks/>
        public event GetTrusteeEmailCompletedEventHandler GetTrusteeEmailCompleted;
        
        /// <remarks/>
        public event GetTrusteeNameCompletedEventHandler GetTrusteeNameCompleted;
        
        /// <remarks/>
        public event GetTrusteeProfileDetailsCompletedEventHandler GetTrusteeProfileDetailsCompleted;
        
        /// <remarks/>
        public event GetUpdatesCompletedEventHandler GetUpdatesCompleted;
        
        /// <remarks/>
        public event HRLeaveApplicationCompletedEventHandler HRLeaveApplicationCompleted;
        
        /// <remarks/>
        public event HRLeaveExtensionCompletedEventHandler HRLeaveExtensionCompleted;
        
        /// <remarks/>
        public event ImprestRequisitionApprovalRequestCompletedEventHandler ImprestRequisitionApprovalRequestCompleted;
        
        /// <remarks/>
        public event ImprestRequisitionCreateCompletedEventHandler ImprestRequisitionCreateCompleted;
        
        /// <remarks/>
        public event InsertApproverCommentsCompletedEventHandler InsertApproverCommentsCompleted;
        
        /// <remarks/>
        public event InsertImprestRequisitionLinesCompletedEventHandler InsertImprestRequisitionLinesCompleted;
        
        /// <remarks/>
        public event LoginForUnchangedPasswordCompletedEventHandler LoginForUnchangedPasswordCompleted;
        
        /// <remarks/>
        public event PensionerStatementCompletedEventHandler PensionerStatementCompleted;
        
        /// <remarks/>
        public event PortalOTPCompletedEventHandler PortalOTPCompleted;
        
        /// <remarks/>
        public event RejectClaimReqCompletedEventHandler RejectClaimReqCompleted;
        
        /// <remarks/>
        public event RejectImprestCompletedEventHandler RejectImprestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RejectLeave", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RejectLeave_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectLeave(string documentNo, string userID) {
            this.Invoke("RejectLeave", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void RejectLeaveAsync(string documentNo, string userID) {
            this.RejectLeaveAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void RejectLeaveAsync(string documentNo, string userID, object userState) {
            if ((this.RejectLeaveOperationCompleted == null)) {
                this.RejectLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectLeaveOperationCompleted);
            }
            this.InvokeAsync("RejectLeave", new object[] {
                        documentNo,
                        userID}, this.RejectLeaveOperationCompleted, userState);
        }
        
        private void OnRejectLeaveOperationCompleted(object arg) {
            if ((this.RejectLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectLeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RejectPV", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RejectPV_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectPV(string documentNo, string userID) {
            this.Invoke("RejectPV", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void RejectPVAsync(string documentNo, string userID) {
            this.RejectPVAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void RejectPVAsync(string documentNo, string userID, object userState) {
            if ((this.RejectPVOperationCompleted == null)) {
                this.RejectPVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectPVOperationCompleted);
            }
            this.InvokeAsync("RejectPV", new object[] {
                        documentNo,
                        userID}, this.RejectPVOperationCompleted, userState);
        }
        
        private void OnRejectPVOperationCompleted(object arg) {
            if ((this.RejectPVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectPVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RejectStoreReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RejectStoreReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectStoreReq(string documentNo, string userID) {
            this.Invoke("RejectStoreReq", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void RejectStoreReqAsync(string documentNo, string userID) {
            this.RejectStoreReqAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void RejectStoreReqAsync(string documentNo, string userID, object userState) {
            if ((this.RejectStoreReqOperationCompleted == null)) {
                this.RejectStoreReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectStoreReqOperationCompleted);
            }
            this.InvokeAsync("RejectStoreReq", new object[] {
                        documentNo,
                        userID}, this.RejectStoreReqOperationCompleted, userState);
        }
        
        private void OnRejectStoreReqOperationCompleted(object arg) {
            if ((this.RejectStoreReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectStoreReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RemoveImprestReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RemoveImprestReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveImprestReqLine(string reqNo, string advanceType) {
            this.Invoke("RemoveImprestReqLine", new object[] {
                        reqNo,
                        advanceType});
        }
        
        /// <remarks/>
        public void RemoveImprestReqLineAsync(string reqNo, string advanceType) {
            this.RemoveImprestReqLineAsync(reqNo, advanceType, null);
        }
        
        /// <remarks/>
        public void RemoveImprestReqLineAsync(string reqNo, string advanceType, object userState) {
            if ((this.RemoveImprestReqLineOperationCompleted == null)) {
                this.RemoveImprestReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveImprestReqLineOperationCompleted);
            }
            this.InvokeAsync("RemoveImprestReqLine", new object[] {
                        reqNo,
                        advanceType}, this.RemoveImprestReqLineOperationCompleted, userState);
        }
        
        private void OnRemoveImprestReqLineOperationCompleted(object arg) {
            if ((this.RemoveImprestReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveImprestReqLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:StaffPortalOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="StaffPortalOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool StaffPortalOTP(string username, string otpCode) {
            object[] results = this.Invoke("StaffPortalOTP", new object[] {
                        username,
                        otpCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StaffPortalOTPAsync(string username, string otpCode) {
            this.StaffPortalOTPAsync(username, otpCode, null);
        }
        
        /// <remarks/>
        public void StaffPortalOTPAsync(string username, string otpCode, object userState) {
            if ((this.StaffPortalOTPOperationCompleted == null)) {
                this.StaffPortalOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStaffPortalOTPOperationCompleted);
            }
            this.InvokeAsync("StaffPortalOTP", new object[] {
                        username,
                        otpCode}, this.StaffPortalOTPOperationCompleted, userState);
        }
        
        private void OnStaffPortalOTPOperationCompleted(object arg) {
            if ((this.StaffPortalOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StaffPortalOTPCompleted(this, new StaffPortalOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:TrusteeLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="TrusteeLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool TrusteeLogin(string username, string password) {
            object[] results = this.Invoke("TrusteeLogin", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TrusteeLoginAsync(string username, string password) {
            this.TrusteeLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void TrusteeLoginAsync(string username, string password, object userState) {
            if ((this.TrusteeLoginOperationCompleted == null)) {
                this.TrusteeLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrusteeLoginOperationCompleted);
            }
            this.InvokeAsync("TrusteeLogin", new object[] {
                        username,
                        password}, this.TrusteeLoginOperationCompleted, userState);
        }
        
        private void OnTrusteeLoginOperationCompleted(object arg) {
            if ((this.TrusteeLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrusteeLoginCompleted(this, new TrusteeLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateBeneficiaryPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateBeneficiaryPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateBeneficiaryPass(string username, string genpass) {
            object[] results = this.Invoke("UpdateBeneficiaryPass", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBeneficiaryPassAsync(string username, string genpass) {
            this.UpdateBeneficiaryPassAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateBeneficiaryPassAsync(string username, string genpass, object userState) {
            if ((this.UpdateBeneficiaryPassOperationCompleted == null)) {
                this.UpdateBeneficiaryPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBeneficiaryPassOperationCompleted);
            }
            this.InvokeAsync("UpdateBeneficiaryPass", new object[] {
                        username,
                        genpass}, this.UpdateBeneficiaryPassOperationCompleted, userState);
        }
        
        private void OnUpdateBeneficiaryPassOperationCompleted(object arg) {
            if ((this.UpdateBeneficiaryPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBeneficiaryPassCompleted(this, new UpdateBeneficiaryPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateMemberAutoGenPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateMemberAutoGenPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateMemberAutoGenPassword(string username, string genpass) {
            object[] results = this.Invoke("UpdateMemberAutoGenPassword", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberAutoGenPasswordAsync(string username, string genpass) {
            this.UpdateMemberAutoGenPasswordAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateMemberAutoGenPasswordAsync(string username, string genpass, object userState) {
            if ((this.UpdateMemberAutoGenPasswordOperationCompleted == null)) {
                this.UpdateMemberAutoGenPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberAutoGenPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberAutoGenPassword", new object[] {
                        username,
                        genpass}, this.UpdateMemberAutoGenPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateMemberAutoGenPasswordOperationCompleted(object arg) {
            if ((this.UpdateMemberAutoGenPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberAutoGenPasswordCompleted(this, new UpdateMemberAutoGenPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateMemberNSSFDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateMemberNSSFDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int UpdateMemberNSSFDate() {
            object[] results = this.Invoke("UpdateMemberNSSFDate", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberNSSFDateAsync() {
            this.UpdateMemberNSSFDateAsync(null);
        }
        
        /// <remarks/>
        public void UpdateMemberNSSFDateAsync(object userState) {
            if ((this.UpdateMemberNSSFDateOperationCompleted == null)) {
                this.UpdateMemberNSSFDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberNSSFDateOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberNSSFDate", new object[0], this.UpdateMemberNSSFDateOperationCompleted, userState);
        }
        
        private void OnUpdateMemberNSSFDateOperationCompleted(object arg) {
            if ((this.UpdateMemberNSSFDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberNSSFDateCompleted(this, new UpdateMemberNSSFDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateMemberPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateMemberPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateMemberPass(string username, string genpass) {
            object[] results = this.Invoke("UpdateMemberPass", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberPassAsync(string username, string genpass) {
            this.UpdateMemberPassAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateMemberPassAsync(string username, string genpass, object userState) {
            if ((this.UpdateMemberPassOperationCompleted == null)) {
                this.UpdateMemberPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberPassOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberPass", new object[] {
                        username,
                        genpass}, this.UpdateMemberPassOperationCompleted, userState);
        }
        
        private void OnUpdateMemberPassOperationCompleted(object arg) {
            if ((this.UpdateMemberPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberPassCompleted(this, new UpdateMemberPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateMemberPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateMemberPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateMemberPassword(string username, string password) {
            object[] results = this.Invoke("UpdateMemberPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberPasswordAsync(string username, string password) {
            this.UpdateMemberPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void UpdateMemberPasswordAsync(string username, string password, object userState) {
            if ((this.UpdateMemberPasswordOperationCompleted == null)) {
                this.UpdateMemberPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberPassword", new object[] {
                        username,
                        password}, this.UpdateMemberPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateMemberPasswordOperationCompleted(object arg) {
            if ((this.UpdateMemberPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberPasswordCompleted(this, new UpdateMemberPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:UpdateStaffPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="UpdateStaffPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateStaffPass(string username, string genpass) {
            object[] results = this.Invoke("UpdateStaffPass", new object[] {
                        username,
                        genpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStaffPassAsync(string username, string genpass) {
            this.UpdateStaffPassAsync(username, genpass, null);
        }
        
        /// <remarks/>
        public void UpdateStaffPassAsync(string username, string genpass, object userState) {
            if ((this.UpdateStaffPassOperationCompleted == null)) {
                this.UpdateStaffPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStaffPassOperationCompleted);
            }
            this.InvokeAsync("UpdateStaffPass", new object[] {
                        username,
                        genpass}, this.UpdateStaffPassOperationCompleted, userState);
        }
        
        private void OnUpdateStaffPassOperationCompleted(object arg) {
            if ((this.UpdateStaffPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStaffPassCompleted(this, new UpdateStaffPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ValidTrustee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ValidTrustee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ValidTrustee(string username) {
            object[] results = this.Invoke("ValidTrustee", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidTrusteeAsync(string username) {
            this.ValidTrusteeAsync(username, null);
        }
        
        /// <remarks/>
        public void ValidTrusteeAsync(string username, object userState) {
            if ((this.ValidTrusteeOperationCompleted == null)) {
                this.ValidTrusteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidTrusteeOperationCompleted);
            }
            this.InvokeAsync("ValidTrustee", new object[] {
                        username}, this.ValidTrusteeOperationCompleted, userState);
        }
        
        private void OnValidTrusteeOperationCompleted(object arg) {
            if ((this.ValidTrusteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidTrusteeCompleted(this, new ValidTrusteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ValidateStartDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ValidateStartDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateStartDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime starting_Date) {
            this.Invoke("ValidateStartDate", new object[] {
                        starting_Date});
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date) {
            this.ValidateStartDateAsync(starting_Date, null);
        }
        
        /// <remarks/>
        public void ValidateStartDateAsync(System.DateTime starting_Date, object userState) {
            if ((this.ValidateStartDateOperationCompleted == null)) {
                this.ValidateStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateStartDateOperationCompleted);
            }
            this.InvokeAsync("ValidateStartDate", new object[] {
                        starting_Date}, this.ValidateStartDateOperationCompleted, userState);
        }
        
        private void OnValidateStartDateOperationCompleted(object arg) {
            if ((this.ValidateStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateStartDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:VerifyCurrentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="VerifyCurrentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VerifyCurrentPassword(string username, string oldpass) {
            object[] results = this.Invoke("VerifyCurrentPassword", new object[] {
                        username,
                        oldpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCurrentPasswordAsync(string username, string oldpass) {
            this.VerifyCurrentPasswordAsync(username, oldpass, null);
        }
        
        /// <remarks/>
        public void VerifyCurrentPasswordAsync(string username, string oldpass, object userState) {
            if ((this.VerifyCurrentPasswordOperationCompleted == null)) {
                this.VerifyCurrentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCurrentPasswordOperationCompleted);
            }
            this.InvokeAsync("VerifyCurrentPassword", new object[] {
                        username,
                        oldpass}, this.VerifyCurrentPasswordOperationCompleted, userState);
        }
        
        private void OnVerifyCurrentPasswordOperationCompleted(object arg) {
            if ((this.VerifyCurrentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCurrentPasswordCompleted(this, new VerifyCurrentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:VerifyCurrentStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="VerifyCurrentStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string VerifyCurrentStaffPassword(string username, string oldpass) {
            object[] results = this.Invoke("VerifyCurrentStaffPassword", new object[] {
                        username,
                        oldpass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCurrentStaffPasswordAsync(string username, string oldpass) {
            this.VerifyCurrentStaffPasswordAsync(username, oldpass, null);
        }
        
        /// <remarks/>
        public void VerifyCurrentStaffPasswordAsync(string username, string oldpass, object userState) {
            if ((this.VerifyCurrentStaffPasswordOperationCompleted == null)) {
                this.VerifyCurrentStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCurrentStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("VerifyCurrentStaffPassword", new object[] {
                        username,
                        oldpass}, this.VerifyCurrentStaffPasswordOperationCompleted, userState);
        }
        
        private void OnVerifyCurrentStaffPasswordOperationCompleted(object arg) {
            if ((this.VerifyCurrentStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCurrentStaffPasswordCompleted(this, new VerifyCurrentStaffPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:getEmployeeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="getEmployeeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string getEmployeeName(string username) {
            object[] results = this.Invoke("getEmployeeName", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmployeeNameAsync(string username) {
            this.getEmployeeNameAsync(username, null);
        }
        
        /// <remarks/>
        public void getEmployeeNameAsync(string username, object userState) {
            if ((this.getEmployeeNameOperationCompleted == null)) {
                this.getEmployeeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmployeeNameOperationCompleted);
            }
            this.InvokeAsync("getEmployeeName", new object[] {
                        username}, this.getEmployeeNameOperationCompleted, userState);
        }
        
        private void OngetEmployeeNameOperationCompleted(object arg) {
            if ((this.getEmployeeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmployeeNameCompleted(this, new getEmployeeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ApproveClaimReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ApproveClaimReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveClaimReq(string documentNo, string userID) {
            this.Invoke("ApproveClaimReq", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void ApproveClaimReqAsync(string documentNo, string userID) {
            this.ApproveClaimReqAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void ApproveClaimReqAsync(string documentNo, string userID, object userState) {
            if ((this.ApproveClaimReqOperationCompleted == null)) {
                this.ApproveClaimReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveClaimReqOperationCompleted);
            }
            this.InvokeAsync("ApproveClaimReq", new object[] {
                        documentNo,
                        userID}, this.ApproveClaimReqOperationCompleted, userState);
        }
        
        private void OnApproveClaimReqOperationCompleted(object arg) {
            if ((this.ApproveClaimReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveClaimReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ApproveImprest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ApproveImprest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveImprest(string documentNo, string userID) {
            this.Invoke("ApproveImprest", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void ApproveImprestAsync(string documentNo, string userID) {
            this.ApproveImprestAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void ApproveImprestAsync(string documentNo, string userID, object userState) {
            if ((this.ApproveImprestOperationCompleted == null)) {
                this.ApproveImprestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveImprestOperationCompleted);
            }
            this.InvokeAsync("ApproveImprest", new object[] {
                        documentNo,
                        userID}, this.ApproveImprestOperationCompleted, userState);
        }
        
        private void OnApproveImprestOperationCompleted(object arg) {
            if ((this.ApproveImprestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveImprestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ApproveLeave", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ApproveLeave_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveLeave(string documentNo, string userID) {
            this.Invoke("ApproveLeave", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void ApproveLeaveAsync(string documentNo, string userID) {
            this.ApproveLeaveAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void ApproveLeaveAsync(string documentNo, string userID, object userState) {
            if ((this.ApproveLeaveOperationCompleted == null)) {
                this.ApproveLeaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveLeaveOperationCompleted);
            }
            this.InvokeAsync("ApproveLeave", new object[] {
                        documentNo,
                        userID}, this.ApproveLeaveOperationCompleted, userState);
        }
        
        private void OnApproveLeaveOperationCompleted(object arg) {
            if ((this.ApproveLeaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveLeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ApprovePV", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ApprovePV_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApprovePV(string documentNo, string userID) {
            this.Invoke("ApprovePV", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void ApprovePVAsync(string documentNo, string userID) {
            this.ApprovePVAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void ApprovePVAsync(string documentNo, string userID, object userState) {
            if ((this.ApprovePVOperationCompleted == null)) {
                this.ApprovePVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovePVOperationCompleted);
            }
            this.InvokeAsync("ApprovePV", new object[] {
                        documentNo,
                        userID}, this.ApprovePVOperationCompleted, userState);
        }
        
        private void OnApprovePVOperationCompleted(object arg) {
            if ((this.ApprovePVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApprovePVCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ApproveStoreReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ApproveStoreReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveStoreReq(string documentNo, string userID) {
            this.Invoke("ApproveStoreReq", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void ApproveStoreReqAsync(string documentNo, string userID) {
            this.ApproveStoreReqAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void ApproveStoreReqAsync(string documentNo, string userID, object userState) {
            if ((this.ApproveStoreReqOperationCompleted == null)) {
                this.ApproveStoreReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveStoreReqOperationCompleted);
            }
            this.InvokeAsync("ApproveStoreReq", new object[] {
                        documentNo,
                        userID}, this.ApproveStoreReqOperationCompleted, userState);
        }
        
        private void OnApproveStoreReqOperationCompleted(object arg) {
            if ((this.ApproveStoreReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveStoreReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:AvailableLeaveDays", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="AvailableLeaveDays_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AvailableLeaveDays(string employeeNo, string leaveType) {
            object[] results = this.Invoke("AvailableLeaveDays", new object[] {
                        employeeNo,
                        leaveType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string employeeNo, string leaveType) {
            this.AvailableLeaveDaysAsync(employeeNo, leaveType, null);
        }
        
        /// <remarks/>
        public void AvailableLeaveDaysAsync(string employeeNo, string leaveType, object userState) {
            if ((this.AvailableLeaveDaysOperationCompleted == null)) {
                this.AvailableLeaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAvailableLeaveDaysOperationCompleted);
            }
            this.InvokeAsync("AvailableLeaveDays", new object[] {
                        employeeNo,
                        leaveType}, this.AvailableLeaveDaysOperationCompleted, userState);
        }
        
        private void OnAvailableLeaveDaysOperationCompleted(object arg) {
            if ((this.AvailableLeaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AvailableLeaveDaysCompleted(this, new AvailableLeaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CalcEndDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CalcEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcEndDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime sDate, int lDays, string leave_Type) {
            object[] results = this.Invoke("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type) {
            this.CalcEndDateAsync(sDate, lDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcEndDateAsync(System.DateTime sDate, int lDays, string leave_Type, object userState) {
            if ((this.CalcEndDateOperationCompleted == null)) {
                this.CalcEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcEndDateOperationCompleted);
            }
            this.InvokeAsync("CalcEndDate", new object[] {
                        sDate,
                        lDays,
                        leave_Type}, this.CalcEndDateOperationCompleted, userState);
        }
        
        private void OnCalcEndDateOperationCompleted(object arg) {
            if ((this.CalcEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcEndDateCompleted(this, new CalcEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CalcReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CalcReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime CalcReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string leave_Type) {
            object[] results = this.Invoke("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type) {
            this.CalcReturnDateAsync(endDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void CalcReturnDateAsync(System.DateTime endDate, string leave_Type, object userState) {
            if ((this.CalcReturnDateOperationCompleted == null)) {
                this.CalcReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcReturnDateOperationCompleted);
            }
            this.InvokeAsync("CalcReturnDate", new object[] {
                        endDate,
                        leave_Type}, this.CalcReturnDateOperationCompleted, userState);
        }
        
        private void OnCalcReturnDateOperationCompleted(object arg) {
            if ((this.CalcReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcReturnDateCompleted(this, new CalcReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CancelClaimRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CancelClaimRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelClaimRequisition(string reqNo) {
            this.Invoke("CancelClaimRequisition", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelClaimRequisitionAsync(string reqNo) {
            this.CancelClaimRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelClaimRequisitionAsync(string reqNo, object userState) {
            if ((this.CancelClaimRequisitionOperationCompleted == null)) {
                this.CancelClaimRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelClaimRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelClaimRequisition", new object[] {
                        reqNo}, this.CancelClaimRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelClaimRequisitionOperationCompleted(object arg) {
            if ((this.CancelClaimRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelClaimRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CancelImprestRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CancelImprestRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelImprestRequisition(string reqNo) {
            this.Invoke("CancelImprestRequisition", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void CancelImprestRequisitionAsync(string reqNo) {
            this.CancelImprestRequisitionAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void CancelImprestRequisitionAsync(string reqNo, object userState) {
            if ((this.CancelImprestRequisitionOperationCompleted == null)) {
                this.CancelImprestRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelImprestRequisitionOperationCompleted);
            }
            this.InvokeAsync("CancelImprestRequisition", new object[] {
                        reqNo}, this.CancelImprestRequisitionOperationCompleted, userState);
        }
        
        private void OnCancelImprestRequisitionOperationCompleted(object arg) {
            if ((this.CancelImprestRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelImprestRequisitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CancelLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CancelLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelLeaveApplication(string appno) {
            object[] results = this.Invoke("CancelLeaveApplication", new object[] {
                        appno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelLeaveApplicationAsync(string appno) {
            this.CancelLeaveApplicationAsync(appno, null);
        }
        
        /// <remarks/>
        public void CancelLeaveApplicationAsync(string appno, object userState) {
            if ((this.CancelLeaveApplicationOperationCompleted == null)) {
                this.CancelLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("CancelLeaveApplication", new object[] {
                        appno}, this.CancelLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnCancelLeaveApplicationOperationCompleted(object arg) {
            if ((this.CancelLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeaveApplicationCompleted(this, new CancelLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ChangeBeneficiaryPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ChangeBeneficiaryPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeBeneficiaryPassword(string custNo, string password) {
            object[] results = this.Invoke("ChangeBeneficiaryPassword", new object[] {
                        custNo,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeBeneficiaryPasswordAsync(string custNo, string password) {
            this.ChangeBeneficiaryPasswordAsync(custNo, password, null);
        }
        
        /// <remarks/>
        public void ChangeBeneficiaryPasswordAsync(string custNo, string password, object userState) {
            if ((this.ChangeBeneficiaryPasswordOperationCompleted == null)) {
                this.ChangeBeneficiaryPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeBeneficiaryPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeBeneficiaryPassword", new object[] {
                        custNo,
                        password}, this.ChangeBeneficiaryPasswordOperationCompleted, userState);
        }
        
        private void OnChangeBeneficiaryPasswordOperationCompleted(object arg) {
            if ((this.ChangeBeneficiaryPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeBeneficiaryPasswordCompleted(this, new ChangeBeneficiaryPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ChangeMemberPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ChangeMemberPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeMemberPassword(string custNo, string password) {
            object[] results = this.Invoke("ChangeMemberPassword", new object[] {
                        custNo,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeMemberPasswordAsync(string custNo, string password) {
            this.ChangeMemberPasswordAsync(custNo, password, null);
        }
        
        /// <remarks/>
        public void ChangeMemberPasswordAsync(string custNo, string password, object userState) {
            if ((this.ChangeMemberPasswordOperationCompleted == null)) {
                this.ChangeMemberPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeMemberPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeMemberPassword", new object[] {
                        custNo,
                        password}, this.ChangeMemberPasswordOperationCompleted, userState);
        }
        
        private void OnChangeMemberPasswordOperationCompleted(object arg) {
            if ((this.ChangeMemberPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeMemberPasswordCompleted(this, new ChangeMemberPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ChangeStaffPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ChangeStaffPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangeStaffPassword(string username, string password) {
            object[] results = this.Invoke("ChangeStaffPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeStaffPasswordAsync(string username, string password) {
            this.ChangeStaffPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ChangeStaffPasswordAsync(string username, string password, object userState) {
            if ((this.ChangeStaffPasswordOperationCompleted == null)) {
                this.ChangeStaffPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeStaffPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeStaffPassword", new object[] {
                        username,
                        password}, this.ChangeStaffPasswordOperationCompleted, userState);
        }
        
        private void OnChangeStaffPasswordOperationCompleted(object arg) {
            if ((this.ChangeStaffPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeStaffPasswordCompleted(this, new ChangeStaffPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ChangeTrusteePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ChangeTrusteePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ChangeTrusteePassword(string username, string password) {
            object[] results = this.Invoke("ChangeTrusteePassword", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeTrusteePasswordAsync(string username, string password) {
            this.ChangeTrusteePasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ChangeTrusteePasswordAsync(string username, string password, object userState) {
            if ((this.ChangeTrusteePasswordOperationCompleted == null)) {
                this.ChangeTrusteePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeTrusteePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeTrusteePassword", new object[] {
                        username,
                        password}, this.ChangeTrusteePasswordOperationCompleted, userState);
        }
        
        private void OnChangeTrusteePasswordOperationCompleted(object arg) {
            if ((this.ChangeTrusteePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeTrusteePasswordCompleted(this, new ChangeTrusteePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckBeneficiaryLoginForUnchangedP" +
            "ass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckBeneficiaryLoginForUnchangedPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBeneficiaryLoginForUnchangedPass(string username, string password) {
            object[] results = this.Invoke("CheckBeneficiaryLoginForUnchangedPass", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBeneficiaryLoginForUnchangedPassAsync(string username, string password) {
            this.CheckBeneficiaryLoginForUnchangedPassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckBeneficiaryLoginForUnchangedPassAsync(string username, string password, object userState) {
            if ((this.CheckBeneficiaryLoginForUnchangedPassOperationCompleted == null)) {
                this.CheckBeneficiaryLoginForUnchangedPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBeneficiaryLoginForUnchangedPassOperationCompleted);
            }
            this.InvokeAsync("CheckBeneficiaryLoginForUnchangedPass", new object[] {
                        username,
                        password}, this.CheckBeneficiaryLoginForUnchangedPassOperationCompleted, userState);
        }
        
        private void OnCheckBeneficiaryLoginForUnchangedPassOperationCompleted(object arg) {
            if ((this.CheckBeneficiaryLoginForUnchangedPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBeneficiaryLoginForUnchangedPassCompleted(this, new CheckBeneficiaryLoginForUnchangedPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckBeneficiaryLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckBeneficiaryLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBeneficiaryLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckBeneficiaryLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBeneficiaryLoginAsync(string username, string userpassword) {
            this.CheckBeneficiaryLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckBeneficiaryLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckBeneficiaryLoginOperationCompleted == null)) {
                this.CheckBeneficiaryLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBeneficiaryLoginOperationCompleted);
            }
            this.InvokeAsync("CheckBeneficiaryLogin", new object[] {
                        username,
                        userpassword}, this.CheckBeneficiaryLoginOperationCompleted, userState);
        }
        
        private void OnCheckBeneficiaryLoginOperationCompleted(object arg) {
            if ((this.CheckBeneficiaryLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBeneficiaryLoginCompleted(this, new CheckBeneficiaryLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckBeneficiaryPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckBeneficiaryPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckBeneficiaryPasswordChanged(string username) {
            object[] results = this.Invoke("CheckBeneficiaryPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBeneficiaryPasswordChangedAsync(string username) {
            this.CheckBeneficiaryPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckBeneficiaryPasswordChangedAsync(string username, object userState) {
            if ((this.CheckBeneficiaryPasswordChangedOperationCompleted == null)) {
                this.CheckBeneficiaryPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBeneficiaryPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckBeneficiaryPasswordChanged", new object[] {
                        username}, this.CheckBeneficiaryPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckBeneficiaryPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckBeneficiaryPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBeneficiaryPasswordChangedCompleted(this, new CheckBeneficiaryPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckMemberLogin1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckMemberLogin1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckMemberLogin1(string username, string userpassword) {
            object[] results = this.Invoke("CheckMemberLogin1", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMemberLogin1Async(string username, string userpassword) {
            this.CheckMemberLogin1Async(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckMemberLogin1Async(string username, string userpassword, object userState) {
            if ((this.CheckMemberLogin1OperationCompleted == null)) {
                this.CheckMemberLogin1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMemberLogin1OperationCompleted);
            }
            this.InvokeAsync("CheckMemberLogin1", new object[] {
                        username,
                        userpassword}, this.CheckMemberLogin1OperationCompleted, userState);
        }
        
        private void OnCheckMemberLogin1OperationCompleted(object arg) {
            if ((this.CheckMemberLogin1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMemberLogin1Completed(this, new CheckMemberLogin1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckMemberLoginForUnchangedPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckMemberLoginForUnchangedPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckMemberLoginForUnchangedPass(string username, string password) {
            object[] results = this.Invoke("CheckMemberLoginForUnchangedPass", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMemberLoginForUnchangedPassAsync(string username, string password) {
            this.CheckMemberLoginForUnchangedPassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckMemberLoginForUnchangedPassAsync(string username, string password, object userState) {
            if ((this.CheckMemberLoginForUnchangedPassOperationCompleted == null)) {
                this.CheckMemberLoginForUnchangedPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMemberLoginForUnchangedPassOperationCompleted);
            }
            this.InvokeAsync("CheckMemberLoginForUnchangedPass", new object[] {
                        username,
                        password}, this.CheckMemberLoginForUnchangedPassOperationCompleted, userState);
        }
        
        private void OnCheckMemberLoginForUnchangedPassOperationCompleted(object arg) {
            if ((this.CheckMemberLoginForUnchangedPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMemberLoginForUnchangedPassCompleted(this, new CheckMemberLoginForUnchangedPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckMemberLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckMemberLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckMemberLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckMemberLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMemberLoginAsync(string username, string userpassword) {
            this.CheckMemberLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckMemberLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckMemberLoginOperationCompleted == null)) {
                this.CheckMemberLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMemberLoginOperationCompleted);
            }
            this.InvokeAsync("CheckMemberLogin", new object[] {
                        username,
                        userpassword}, this.CheckMemberLoginOperationCompleted, userState);
        }
        
        private void OnCheckMemberLoginOperationCompleted(object arg) {
            if ((this.CheckMemberLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMemberLoginCompleted(this, new CheckMemberLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckMemberPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckMemberPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckMemberPasswordChanged(string username) {
            object[] results = this.Invoke("CheckMemberPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMemberPasswordChangedAsync(string username) {
            this.CheckMemberPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckMemberPasswordChangedAsync(string username, object userState) {
            if ((this.CheckMemberPasswordChangedOperationCompleted == null)) {
                this.CheckMemberPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMemberPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckMemberPasswordChanged", new object[] {
                        username}, this.CheckMemberPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckMemberPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckMemberPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMemberPasswordChangedCompleted(this, new CheckMemberPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckStaffLoginForUnchangedPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckStaffLoginForUnchangedPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffLoginForUnchangedPass(string username, string password) {
            object[] results = this.Invoke("CheckStaffLoginForUnchangedPass", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffLoginForUnchangedPassAsync(string username, string password) {
            this.CheckStaffLoginForUnchangedPassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckStaffLoginForUnchangedPassAsync(string username, string password, object userState) {
            if ((this.CheckStaffLoginForUnchangedPassOperationCompleted == null)) {
                this.CheckStaffLoginForUnchangedPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffLoginForUnchangedPassOperationCompleted);
            }
            this.InvokeAsync("CheckStaffLoginForUnchangedPass", new object[] {
                        username,
                        password}, this.CheckStaffLoginForUnchangedPassOperationCompleted, userState);
        }
        
        private void OnCheckStaffLoginForUnchangedPassOperationCompleted(object arg) {
            if ((this.CheckStaffLoginForUnchangedPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffLoginForUnchangedPassCompleted(this, new CheckStaffLoginForUnchangedPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckStaffLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckStaffLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckStaffLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffLoginAsync(string username, string userpassword) {
            this.CheckStaffLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckStaffLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckStaffLoginOperationCompleted == null)) {
                this.CheckStaffLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffLoginOperationCompleted);
            }
            this.InvokeAsync("CheckStaffLogin", new object[] {
                        username,
                        userpassword}, this.CheckStaffLoginOperationCompleted, userState);
        }
        
        private void OnCheckStaffLoginOperationCompleted(object arg) {
            if ((this.CheckStaffLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffLoginCompleted(this, new CheckStaffLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckStaffPasswordChanged", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckStaffPasswordChanged_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffPasswordChanged(string username) {
            object[] results = this.Invoke("CheckStaffPasswordChanged", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username) {
            this.CheckStaffPasswordChangedAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckStaffPasswordChangedAsync(string username, object userState) {
            if ((this.CheckStaffPasswordChangedOperationCompleted == null)) {
                this.CheckStaffPasswordChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffPasswordChangedOperationCompleted);
            }
            this.InvokeAsync("CheckStaffPasswordChanged", new object[] {
                        username}, this.CheckStaffPasswordChangedOperationCompleted, userState);
        }
        
        private void OnCheckStaffPasswordChangedOperationCompleted(object arg) {
            if ((this.CheckStaffPasswordChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffPasswordChangedCompleted(this, new CheckStaffPasswordChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckStaffPortalLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckStaffPortalLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckStaffPortalLogin(string username, string userpassword) {
            object[] results = this.Invoke("CheckStaffPortalLogin", new object[] {
                        username,
                        userpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStaffPortalLoginAsync(string username, string userpassword) {
            this.CheckStaffPortalLoginAsync(username, userpassword, null);
        }
        
        /// <remarks/>
        public void CheckStaffPortalLoginAsync(string username, string userpassword, object userState) {
            if ((this.CheckStaffPortalLoginOperationCompleted == null)) {
                this.CheckStaffPortalLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStaffPortalLoginOperationCompleted);
            }
            this.InvokeAsync("CheckStaffPortalLogin", new object[] {
                        username,
                        userpassword}, this.CheckStaffPortalLoginOperationCompleted, userState);
        }
        
        private void OnCheckStaffPortalLoginOperationCompleted(object arg) {
            if ((this.CheckStaffPortalLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStaffPortalLoginCompleted(this, new CheckStaffPortalLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckValidBeneficiaryNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckValidBeneficiaryNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckValidBeneficiaryNo(string username) {
            object[] results = this.Invoke("CheckValidBeneficiaryNo", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidBeneficiaryNoAsync(string username) {
            this.CheckValidBeneficiaryNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidBeneficiaryNoAsync(string username, object userState) {
            if ((this.CheckValidBeneficiaryNoOperationCompleted == null)) {
                this.CheckValidBeneficiaryNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidBeneficiaryNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidBeneficiaryNo", new object[] {
                        username}, this.CheckValidBeneficiaryNoOperationCompleted, userState);
        }
        
        private void OnCheckValidBeneficiaryNoOperationCompleted(object arg) {
            if ((this.CheckValidBeneficiaryNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidBeneficiaryNoCompleted(this, new CheckValidBeneficiaryNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckValidMemberNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckValidMemberNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckValidMemberNo(string username) {
            object[] results = this.Invoke("CheckValidMemberNo", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidMemberNoAsync(string username) {
            this.CheckValidMemberNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidMemberNoAsync(string username, object userState) {
            if ((this.CheckValidMemberNoOperationCompleted == null)) {
                this.CheckValidMemberNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidMemberNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidMemberNo", new object[] {
                        username}, this.CheckValidMemberNoOperationCompleted, userState);
        }
        
        private void OnCheckValidMemberNoOperationCompleted(object arg) {
            if ((this.CheckValidMemberNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidMemberNoCompleted(this, new CheckValidMemberNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:CheckValidStaffNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="CheckValidStaffNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CheckValidStaffNo(string username) {
            object[] results = this.Invoke("CheckValidStaffNo", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username) {
            this.CheckValidStaffNoAsync(username, null);
        }
        
        /// <remarks/>
        public void CheckValidStaffNoAsync(string username, object userState) {
            if ((this.CheckValidStaffNoOperationCompleted == null)) {
                this.CheckValidStaffNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidStaffNoOperationCompleted);
            }
            this.InvokeAsync("CheckValidStaffNo", new object[] {
                        username}, this.CheckValidStaffNoOperationCompleted, userState);
        }
        
        private void OnCheckValidStaffNoOperationCompleted(object arg) {
            if ((this.CheckValidStaffNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidStaffNoCompleted(this, new CheckValidStaffNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ClaimRequisitionApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ClaimRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClaimRequisitionApprovalRequest(string reqNo) {
            this.Invoke("ClaimRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void ClaimRequisitionApprovalRequestAsync(string reqNo) {
            this.ClaimRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void ClaimRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.ClaimRequisitionApprovalRequestOperationCompleted == null)) {
                this.ClaimRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("ClaimRequisitionApprovalRequest", new object[] {
                        reqNo}, this.ClaimRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnClaimRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.ClaimRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ClaimRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ClaimRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ClaimRequisitionCreate(string campusz, string campusName, string username, string reason) {
            object[] results = this.Invoke("ClaimRequisitionCreate", new object[] {
                        campusz,
                        campusName,
                        username,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimRequisitionCreateAsync(string campusz, string campusName, string username, string reason) {
            this.ClaimRequisitionCreateAsync(campusz, campusName, username, reason, null);
        }
        
        /// <remarks/>
        public void ClaimRequisitionCreateAsync(string campusz, string campusName, string username, string reason, object userState) {
            if ((this.ClaimRequisitionCreateOperationCompleted == null)) {
                this.ClaimRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("ClaimRequisitionCreate", new object[] {
                        campusz,
                        campusName,
                        username,
                        reason}, this.ClaimRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnClaimRequisitionCreateOperationCompleted(object arg) {
            if ((this.ClaimRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimRequisitionCreateCompleted(this, new ClaimRequisitionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ConfirmPortalOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ConfirmPortalOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmPortalOTP(string username, string otpCode) {
            object[] results = this.Invoke("ConfirmPortalOTP", new object[] {
                        username,
                        otpCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPortalOTPAsync(string username, string otpCode) {
            this.ConfirmPortalOTPAsync(username, otpCode, null);
        }
        
        /// <remarks/>
        public void ConfirmPortalOTPAsync(string username, string otpCode, object userState) {
            if ((this.ConfirmPortalOTPOperationCompleted == null)) {
                this.ConfirmPortalOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPortalOTPOperationCompleted);
            }
            this.InvokeAsync("ConfirmPortalOTP", new object[] {
                        username,
                        otpCode}, this.ConfirmPortalOTPOperationCompleted, userState);
        }
        
        private void OnConfirmPortalOTPOperationCompleted(object arg) {
            if ((this.ConfirmPortalOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPortalOTPCompleted(this, new ConfirmPortalOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ConfirmStaffPortalOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ConfirmStaffPortalOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmStaffPortalOTP(string username, string otpCode) {
            object[] results = this.Invoke("ConfirmStaffPortalOTP", new object[] {
                        username,
                        otpCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmStaffPortalOTPAsync(string username, string otpCode) {
            this.ConfirmStaffPortalOTPAsync(username, otpCode, null);
        }
        
        /// <remarks/>
        public void ConfirmStaffPortalOTPAsync(string username, string otpCode, object userState) {
            if ((this.ConfirmStaffPortalOTPOperationCompleted == null)) {
                this.ConfirmStaffPortalOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmStaffPortalOTPOperationCompleted);
            }
            this.InvokeAsync("ConfirmStaffPortalOTP", new object[] {
                        username,
                        otpCode}, this.ConfirmStaffPortalOTPOperationCompleted, userState);
        }
        
        private void OnConfirmStaffPortalOTPOperationCompleted(object arg) {
            if ((this.ConfirmStaffPortalOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmStaffPortalOTPCompleted(this, new ConfirmStaffPortalOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:DetermineIfIncludesNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="DetermineIfIncludesNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIncludesNonWorking(ref string fLeaveCode) {
            object[] results = this.Invoke("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode});
            fLeaveCode = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode) {
            this.DetermineIfIncludesNonWorkingAsync(fLeaveCode, null);
        }
        
        /// <remarks/>
        public void DetermineIfIncludesNonWorkingAsync(string fLeaveCode, object userState) {
            if ((this.DetermineIfIncludesNonWorkingOperationCompleted == null)) {
                this.DetermineIfIncludesNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIncludesNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIncludesNonWorking", new object[] {
                        fLeaveCode}, this.DetermineIfIncludesNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIncludesNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIncludesNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIncludesNonWorkingCompleted(this, new DetermineIfIncludesNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:DetermineIfIsNonWorking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="DetermineIfIsNonWorking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DetermineIfIsNonWorking([System.Xml.Serialization.XmlElementAttribute(DataType="date")] ref System.DateTime bcDate, ref string leave_Type) {
            object[] results = this.Invoke("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type});
            bcDate = ((System.DateTime)(results[1]));
            leave_Type = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type) {
            this.DetermineIfIsNonWorkingAsync(bcDate, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineIfIsNonWorkingAsync(System.DateTime bcDate, string leave_Type, object userState) {
            if ((this.DetermineIfIsNonWorkingOperationCompleted == null)) {
                this.DetermineIfIsNonWorkingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineIfIsNonWorkingOperationCompleted);
            }
            this.InvokeAsync("DetermineIfIsNonWorking", new object[] {
                        bcDate,
                        leave_Type}, this.DetermineIfIsNonWorkingOperationCompleted, userState);
        }
        
        private void OnDetermineIfIsNonWorkingOperationCompleted(object arg) {
            if ((this.DetermineIfIsNonWorkingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineIfIsNonWorkingCompleted(this, new DetermineIfIsNonWorkingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:DetermineLeaveReturnDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="DetermineLeaveReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime DetermineLeaveReturnDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            object[] results = this.Invoke("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type) {
            this.DetermineLeaveReturnDateAsync(fBeginDate, fDays, leave_Type, null);
        }
        
        /// <remarks/>
        public void DetermineLeaveReturnDateAsync(System.DateTime fBeginDate, decimal fDays, string leave_Type, object userState) {
            if ((this.DetermineLeaveReturnDateOperationCompleted == null)) {
                this.DetermineLeaveReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDetermineLeaveReturnDateOperationCompleted);
            }
            this.InvokeAsync("DetermineLeaveReturnDate", new object[] {
                        fBeginDate,
                        fDays,
                        leave_Type}, this.DetermineLeaveReturnDateOperationCompleted, userState);
        }
        
        private void OnDetermineLeaveReturnDateOperationCompleted(object arg) {
            if ((this.DetermineLeaveReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DetermineLeaveReturnDateCompleted(this, new DetermineLeaveReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:FnAttachments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="FnAttachments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachments(string retNo, string fileName, string attachment, int tableId) {
            object[] results = this.Invoke("FnAttachments", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachmentsAsync(string retNo, string fileName, string attachment, int tableId) {
            this.FnAttachmentsAsync(retNo, fileName, attachment, tableId, null);
        }
        
        /// <remarks/>
        public void FnAttachmentsAsync(string retNo, string fileName, string attachment, int tableId, object userState) {
            if ((this.FnAttachmentsOperationCompleted == null)) {
                this.FnAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachmentsOperationCompleted);
            }
            this.InvokeAsync("FnAttachments", new object[] {
                        retNo,
                        fileName,
                        attachment,
                        tableId}, this.FnAttachmentsOperationCompleted, userState);
        }
        
        private void OnFnAttachmentsOperationCompleted(object arg) {
            if ((this.FnAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachmentsCompleted(this, new FnAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateBeneficiaryReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateBeneficiaryReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateBeneficiaryReport(string path, string fileName) {
            this.Invoke("GenerateBeneficiaryReport", new object[] {
                        path,
                        fileName});
        }
        
        /// <remarks/>
        public void GenerateBeneficiaryReportAsync(string path, string fileName) {
            this.GenerateBeneficiaryReportAsync(path, fileName, null);
        }
        
        /// <remarks/>
        public void GenerateBeneficiaryReportAsync(string path, string fileName, object userState) {
            if ((this.GenerateBeneficiaryReportOperationCompleted == null)) {
                this.GenerateBeneficiaryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateBeneficiaryReportOperationCompleted);
            }
            this.InvokeAsync("GenerateBeneficiaryReport", new object[] {
                        path,
                        fileName}, this.GenerateBeneficiaryReportOperationCompleted, userState);
        }
        
        private void OnGenerateBeneficiaryReportOperationCompleted(object arg) {
            if ((this.GenerateBeneficiaryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateBeneficiaryReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateBeneficiaryStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateBeneficiaryStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateBeneficiaryStatement(string username, string filenameFromApp) {
            this.Invoke("GenerateBeneficiaryStatement", new object[] {
                        username,
                        filenameFromApp});
        }
        
        /// <remarks/>
        public void GenerateBeneficiaryStatementAsync(string username, string filenameFromApp) {
            this.GenerateBeneficiaryStatementAsync(username, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateBeneficiaryStatementAsync(string username, string filenameFromApp, object userState) {
            if ((this.GenerateBeneficiaryStatementOperationCompleted == null)) {
                this.GenerateBeneficiaryStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateBeneficiaryStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateBeneficiaryStatement", new object[] {
                        username,
                        filenameFromApp}, this.GenerateBeneficiaryStatementOperationCompleted, userState);
        }
        
        private void OnGenerateBeneficiaryStatementOperationCompleted(object arg) {
            if ((this.GenerateBeneficiaryStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateBeneficiaryStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateLeaveStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateLeaveStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateLeaveStatement(string staffNo, string filenameFromApp) {
            this.Invoke("GenerateLeaveStatement", new object[] {
                        staffNo,
                        filenameFromApp});
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementAsync(string staffNo, string filenameFromApp) {
            this.GenerateLeaveStatementAsync(staffNo, filenameFromApp, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveStatementAsync(string staffNo, string filenameFromApp, object userState) {
            if ((this.GenerateLeaveStatementOperationCompleted == null)) {
                this.GenerateLeaveStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveStatement", new object[] {
                        staffNo,
                        filenameFromApp}, this.GenerateLeaveStatementOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveStatementOperationCompleted(object arg) {
            if ((this.GenerateLeaveStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateMemberDetailedStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateMemberDetailedStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateMemberDetailedStatement(string username, string filenameFromApp, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            this.Invoke("GenerateMemberDetailedStatement", new object[] {
                        username,
                        filenameFromApp,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void GenerateMemberDetailedStatementAsync(string username, string filenameFromApp, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateMemberDetailedStatementAsync(username, filenameFromApp, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateMemberDetailedStatementAsync(string username, string filenameFromApp, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateMemberDetailedStatementOperationCompleted == null)) {
                this.GenerateMemberDetailedStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMemberDetailedStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateMemberDetailedStatement", new object[] {
                        username,
                        filenameFromApp,
                        startDate,
                        endDate}, this.GenerateMemberDetailedStatementOperationCompleted, userState);
        }
        
        private void OnGenerateMemberDetailedStatementOperationCompleted(object arg) {
            if ((this.GenerateMemberDetailedStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMemberDetailedStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateMemberStatement1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateMemberStatement1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateMemberStatement1(string path, string memberNo, string filenameFromApp, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            this.Invoke("GenerateMemberStatement1", new object[] {
                        path,
                        memberNo,
                        filenameFromApp,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void GenerateMemberStatement1Async(string path, string memberNo, string filenameFromApp, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateMemberStatement1Async(path, memberNo, filenameFromApp, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateMemberStatement1Async(string path, string memberNo, string filenameFromApp, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateMemberStatement1OperationCompleted == null)) {
                this.GenerateMemberStatement1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMemberStatement1OperationCompleted);
            }
            this.InvokeAsync("GenerateMemberStatement1", new object[] {
                        path,
                        memberNo,
                        filenameFromApp,
                        startDate,
                        endDate}, this.GenerateMemberStatement1OperationCompleted, userState);
        }
        
        private void OnGenerateMemberStatement1OperationCompleted(object arg) {
            if ((this.GenerateMemberStatement1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMemberStatement1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateMemberStatementNSSF", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateMemberStatementNSSF_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateMemberStatementNSSF(string username, string filenameFromApp, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            this.Invoke("GenerateMemberStatementNSSF", new object[] {
                        username,
                        filenameFromApp,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void GenerateMemberStatementNSSFAsync(string username, string filenameFromApp, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateMemberStatementNSSFAsync(username, filenameFromApp, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateMemberStatementNSSFAsync(string username, string filenameFromApp, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateMemberStatementNSSFOperationCompleted == null)) {
                this.GenerateMemberStatementNSSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMemberStatementNSSFOperationCompleted);
            }
            this.InvokeAsync("GenerateMemberStatementNSSF", new object[] {
                        username,
                        filenameFromApp,
                        startDate,
                        endDate}, this.GenerateMemberStatementNSSFOperationCompleted, userState);
        }
        
        private void OnGenerateMemberStatementNSSFOperationCompleted(object arg) {
            if ((this.GenerateMemberStatementNSSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMemberStatementNSSFCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GenerateMemberStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GenerateMemberStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerateMemberStatement(string path, string memberNo, string filenameFromApp, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            this.Invoke("GenerateMemberStatement", new object[] {
                        path,
                        memberNo,
                        filenameFromApp,
                        startDate});
        }
        
        /// <remarks/>
        public void GenerateMemberStatementAsync(string path, string memberNo, string filenameFromApp, System.DateTime startDate) {
            this.GenerateMemberStatementAsync(path, memberNo, filenameFromApp, startDate, null);
        }
        
        /// <remarks/>
        public void GenerateMemberStatementAsync(string path, string memberNo, string filenameFromApp, System.DateTime startDate, object userState) {
            if ((this.GenerateMemberStatementOperationCompleted == null)) {
                this.GenerateMemberStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMemberStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateMemberStatement", new object[] {
                        path,
                        memberNo,
                        filenameFromApp,
                        startDate}, this.GenerateMemberStatementOperationCompleted, userState);
        }
        
        private void OnGenerateMemberStatementOperationCompleted(object arg) {
            if ((this.GenerateMemberStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMemberStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetBeneficiaryPFNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetBeneficiaryPFNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBeneficiaryPFNo(string bfno) {
            object[] results = this.Invoke("GetBeneficiaryPFNo", new object[] {
                        bfno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeneficiaryPFNoAsync(string bfno) {
            this.GetBeneficiaryPFNoAsync(bfno, null);
        }
        
        /// <remarks/>
        public void GetBeneficiaryPFNoAsync(string bfno, object userState) {
            if ((this.GetBeneficiaryPFNoOperationCompleted == null)) {
                this.GetBeneficiaryPFNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeneficiaryPFNoOperationCompleted);
            }
            this.InvokeAsync("GetBeneficiaryPFNo", new object[] {
                        bfno}, this.GetBeneficiaryPFNoOperationCompleted, userState);
        }
        
        private void OnGetBeneficiaryPFNoOperationCompleted(object arg) {
            if ((this.GetBeneficiaryPFNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeneficiaryPFNoCompleted(this, new GetBeneficiaryPFNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetBeneficiaryProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetBeneficiaryProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetBeneficiaryProfileDetails(string username) {
            object[] results = this.Invoke("GetBeneficiaryProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBeneficiaryProfileDetailsAsync(string username) {
            this.GetBeneficiaryProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetBeneficiaryProfileDetailsAsync(string username, object userState) {
            if ((this.GetBeneficiaryProfileDetailsOperationCompleted == null)) {
                this.GetBeneficiaryProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBeneficiaryProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBeneficiaryProfileDetails", new object[] {
                        username}, this.GetBeneficiaryProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetBeneficiaryProfileDetailsOperationCompleted(object arg) {
            if ((this.GetBeneficiaryProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBeneficiaryProfileDetailsCompleted(this, new GetBeneficiaryProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetClaimsCount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetClaimsCount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetClaimsCount(string empNo) {
            object[] results = this.Invoke("GetClaimsCount", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimsCountAsync(string empNo) {
            this.GetClaimsCountAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetClaimsCountAsync(string empNo, object userState) {
            if ((this.GetClaimsCountOperationCompleted == null)) {
                this.GetClaimsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimsCountOperationCompleted);
            }
            this.InvokeAsync("GetClaimsCount", new object[] {
                        empNo}, this.GetClaimsCountOperationCompleted, userState);
        }
        
        private void OnGetClaimsCountOperationCompleted(object arg) {
            if ((this.GetClaimsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimsCountCompleted(this, new GetClaimsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetCurrentPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetCurrentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentPassword(string username) {
            object[] results = this.Invoke("GetCurrentPassword", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentPasswordAsync(string username) {
            this.GetCurrentPasswordAsync(username, null);
        }
        
        /// <remarks/>
        public void GetCurrentPasswordAsync(string username, object userState) {
            if ((this.GetCurrentPasswordOperationCompleted == null)) {
                this.GetCurrentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentPasswordOperationCompleted);
            }
            this.InvokeAsync("GetCurrentPassword", new object[] {
                        username}, this.GetCurrentPasswordOperationCompleted, userState);
        }
        
        private void OnGetCurrentPasswordOperationCompleted(object arg) {
            if ((this.GetCurrentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentPasswordCompleted(this, new GetCurrentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetDefaultLeaveDays", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetDefaultLeaveDays_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetDefaultLeaveDays(string lvcode) {
            object[] results = this.Invoke("GetDefaultLeaveDays", new object[] {
                        lvcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultLeaveDaysAsync(string lvcode) {
            this.GetDefaultLeaveDaysAsync(lvcode, null);
        }
        
        /// <remarks/>
        public void GetDefaultLeaveDaysAsync(string lvcode, object userState) {
            if ((this.GetDefaultLeaveDaysOperationCompleted == null)) {
                this.GetDefaultLeaveDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultLeaveDaysOperationCompleted);
            }
            this.InvokeAsync("GetDefaultLeaveDays", new object[] {
                        lvcode}, this.GetDefaultLeaveDaysOperationCompleted, userState);
        }
        
        private void OnGetDefaultLeaveDaysOperationCompleted(object arg) {
            if ((this.GetDefaultLeaveDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultLeaveDaysCompleted(this, new GetDefaultLeaveDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetExtensionStartDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetExtensionStartDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetExtensionStartDate(string lvNo) {
            object[] results = this.Invoke("GetExtensionStartDate", new object[] {
                        lvNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExtensionStartDateAsync(string lvNo) {
            this.GetExtensionStartDateAsync(lvNo, null);
        }
        
        /// <remarks/>
        public void GetExtensionStartDateAsync(string lvNo, object userState) {
            if ((this.GetExtensionStartDateOperationCompleted == null)) {
                this.GetExtensionStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExtensionStartDateOperationCompleted);
            }
            this.InvokeAsync("GetExtensionStartDate", new object[] {
                        lvNo}, this.GetExtensionStartDateOperationCompleted, userState);
        }
        
        private void OnGetExtensionStartDateOperationCompleted(object arg) {
            if ((this.GetExtensionStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExtensionStartDateCompleted(this, new GetExtensionStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetImprestCount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetImprestCount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestCount(string empNo) {
            object[] results = this.Invoke("GetImprestCount", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestCountAsync(string empNo) {
            this.GetImprestCountAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetImprestCountAsync(string empNo, object userState) {
            if ((this.GetImprestCountOperationCompleted == null)) {
                this.GetImprestCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestCountOperationCompleted);
            }
            this.InvokeAsync("GetImprestCount", new object[] {
                        empNo}, this.GetImprestCountOperationCompleted, userState);
        }
        
        private void OnGetImprestCountOperationCompleted(object arg) {
            if ((this.GetImprestCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestCountCompleted(this, new GetImprestCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetLeaveAppCount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetLeaveAppCount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLeaveAppCount(string empNo) {
            object[] results = this.Invoke("GetLeaveAppCount", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveAppCountAsync(string empNo) {
            this.GetLeaveAppCountAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetLeaveAppCountAsync(string empNo, object userState) {
            if ((this.GetLeaveAppCountOperationCompleted == null)) {
                this.GetLeaveAppCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveAppCountOperationCompleted);
            }
            this.InvokeAsync("GetLeaveAppCount", new object[] {
                        empNo}, this.GetLeaveAppCountOperationCompleted, userState);
        }
        
        private void OnGetLeaveAppCountOperationCompleted(object arg) {
            if ((this.GetLeaveAppCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveAppCountCompleted(this, new GetLeaveAppCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberBeneficiaries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberBeneficiaries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberBeneficiaries(string username) {
            object[] results = this.Invoke("GetMemberBeneficiaries", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberBeneficiariesAsync(string username) {
            this.GetMemberBeneficiariesAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberBeneficiariesAsync(string username, object userState) {
            if ((this.GetMemberBeneficiariesOperationCompleted == null)) {
                this.GetMemberBeneficiariesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberBeneficiariesOperationCompleted);
            }
            this.InvokeAsync("GetMemberBeneficiaries", new object[] {
                        username}, this.GetMemberBeneficiariesOperationCompleted, userState);
        }
        
        private void OnGetMemberBeneficiariesOperationCompleted(object arg) {
            if ((this.GetMemberBeneficiariesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberBeneficiariesCompleted(this, new GetMemberBeneficiariesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberEmail(string username) {
            object[] results = this.Invoke("GetMemberEmail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberEmailAsync(string username) {
            this.GetMemberEmailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberEmailAsync(string username, object userState) {
            if ((this.GetMemberEmailOperationCompleted == null)) {
                this.GetMemberEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberEmailOperationCompleted);
            }
            this.InvokeAsync("GetMemberEmail", new object[] {
                        username}, this.GetMemberEmailOperationCompleted, userState);
        }
        
        private void OnGetMemberEmailOperationCompleted(object arg) {
            if ((this.GetMemberEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberEmailCompleted(this, new GetMemberEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberGender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberGender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberGender(string username) {
            object[] results = this.Invoke("GetMemberGender", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberGenderAsync(string username) {
            this.GetMemberGenderAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberGenderAsync(string username, object userState) {
            if ((this.GetMemberGenderOperationCompleted == null)) {
                this.GetMemberGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberGenderOperationCompleted);
            }
            this.InvokeAsync("GetMemberGender", new object[] {
                        username}, this.GetMemberGenderOperationCompleted, userState);
        }
        
        private void OnGetMemberGenderOperationCompleted(object arg) {
            if ((this.GetMemberGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberGenderCompleted(this, new GetMemberGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberMail(string username) {
            object[] results = this.Invoke("GetMemberMail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberMailAsync(string username) {
            this.GetMemberMailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberMailAsync(string username, object userState) {
            if ((this.GetMemberMailOperationCompleted == null)) {
                this.GetMemberMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberMailOperationCompleted);
            }
            this.InvokeAsync("GetMemberMail", new object[] {
                        username}, this.GetMemberMailOperationCompleted, userState);
        }
        
        private void OnGetMemberMailOperationCompleted(object arg) {
            if ((this.GetMemberMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberMailCompleted(this, new GetMemberMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberName(string username) {
            object[] results = this.Invoke("GetMemberName", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberNameAsync(string username) {
            this.GetMemberNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberNameAsync(string username, object userState) {
            if ((this.GetMemberNameOperationCompleted == null)) {
                this.GetMemberNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberNameOperationCompleted);
            }
            this.InvokeAsync("GetMemberName", new object[] {
                        username}, this.GetMemberNameOperationCompleted, userState);
        }
        
        private void OnGetMemberNameOperationCompleted(object arg) {
            if ((this.GetMemberNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberNameCompleted(this, new GetMemberNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetMemberProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetMemberProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetMemberProfileDetails(string username) {
            object[] results = this.Invoke("GetMemberProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemberProfileDetailsAsync(string username) {
            this.GetMemberProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetMemberProfileDetailsAsync(string username, object userState) {
            if ((this.GetMemberProfileDetailsOperationCompleted == null)) {
                this.GetMemberProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemberProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetMemberProfileDetails", new object[] {
                        username}, this.GetMemberProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetMemberProfileDetailsOperationCompleted(object arg) {
            if ((this.GetMemberProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemberProfileDetailsCompleted(this, new GetMemberProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetPayrollPeriods", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetPayrollPeriods_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPayrollPeriods() {
            object[] results = this.Invoke("GetPayrollPeriods", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPayrollPeriodsAsync() {
            this.GetPayrollPeriodsAsync(null);
        }
        
        /// <remarks/>
        public void GetPayrollPeriodsAsync(object userState) {
            if ((this.GetPayrollPeriodsOperationCompleted == null)) {
                this.GetPayrollPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPayrollPeriodsOperationCompleted);
            }
            this.InvokeAsync("GetPayrollPeriods", new object[0], this.GetPayrollPeriodsOperationCompleted, userState);
        }
        
        private void OnGetPayrollPeriodsOperationCompleted(object arg) {
            if ((this.GetPayrollPeriodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPayrollPeriodsCompleted(this, new GetPayrollPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetPostedLeaves", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetPostedLeaves_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetPostedLeaves(string empNo) {
            object[] results = this.Invoke("GetPostedLeaves", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostedLeavesAsync(string empNo) {
            this.GetPostedLeavesAsync(empNo, null);
        }
        
        /// <remarks/>
        public void GetPostedLeavesAsync(string empNo, object userState) {
            if ((this.GetPostedLeavesOperationCompleted == null)) {
                this.GetPostedLeavesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostedLeavesOperationCompleted);
            }
            this.InvokeAsync("GetPostedLeaves", new object[] {
                        empNo}, this.GetPostedLeavesOperationCompleted, userState);
        }
        
        private void OnGetPostedLeavesOperationCompleted(object arg) {
            if ((this.GetPostedLeavesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostedLeavesCompleted(this, new GetPostedLeavesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetProfilePicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetProfilePicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetProfilePicture(string username) {
            object[] results = this.Invoke("GetProfilePicture", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string username) {
            this.GetProfilePictureAsync(username, null);
        }
        
        /// <remarks/>
        public void GetProfilePictureAsync(string username, object userState) {
            if ((this.GetProfilePictureOperationCompleted == null)) {
                this.GetProfilePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfilePictureOperationCompleted);
            }
            this.InvokeAsync("GetProfilePicture", new object[] {
                        username}, this.GetProfilePictureOperationCompleted, userState);
        }
        
        private void OnGetProfilePictureOperationCompleted(object arg) {
            if ((this.GetProfilePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfilePictureCompleted(this, new GetProfilePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetSponsorName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetSponsorName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetSponsorName(string sponsorNum) {
            object[] results = this.Invoke("GetSponsorName", new object[] {
                        sponsorNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSponsorNameAsync(string sponsorNum) {
            this.GetSponsorNameAsync(sponsorNum, null);
        }
        
        /// <remarks/>
        public void GetSponsorNameAsync(string sponsorNum, object userState) {
            if ((this.GetSponsorNameOperationCompleted == null)) {
                this.GetSponsorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSponsorNameOperationCompleted);
            }
            this.InvokeAsync("GetSponsorName", new object[] {
                        sponsorNum}, this.GetSponsorNameOperationCompleted, userState);
        }
        
        private void OnGetSponsorNameOperationCompleted(object arg) {
            if ((this.GetSponsorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSponsorNameCompleted(this, new GetSponsorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetStafBfProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetStafBfProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStafBfProfileDetails(string username) {
            object[] results = this.Invoke("GetStafBfProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStafBfProfileDetailsAsync(string username) {
            this.GetStafBfProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStafBfProfileDetailsAsync(string username, object userState) {
            if ((this.GetStafBfProfileDetailsOperationCompleted == null)) {
                this.GetStafBfProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStafBfProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStafBfProfileDetails", new object[] {
                        username}, this.GetStafBfProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetStafBfProfileDetailsOperationCompleted(object arg) {
            if ((this.GetStafBfProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStafBfProfileDetailsCompleted(this, new GetStafBfProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetStaffMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetStaffMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStaffMail(string username) {
            object[] results = this.Invoke("GetStaffMail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffMailAsync(string username) {
            this.GetStaffMailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetStaffMailAsync(string username, object userState) {
            if ((this.GetStaffMailOperationCompleted == null)) {
                this.GetStaffMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffMailOperationCompleted);
            }
            this.InvokeAsync("GetStaffMail", new object[] {
                        username}, this.GetStaffMailOperationCompleted, userState);
        }
        
        private void OnGetStaffMailOperationCompleted(object arg) {
            if ((this.GetStaffMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffMailCompleted(this, new GetStaffMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetTrusteeEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetTrusteeEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrusteeEmail(string username) {
            object[] results = this.Invoke("GetTrusteeEmail", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrusteeEmailAsync(string username) {
            this.GetTrusteeEmailAsync(username, null);
        }
        
        /// <remarks/>
        public void GetTrusteeEmailAsync(string username, object userState) {
            if ((this.GetTrusteeEmailOperationCompleted == null)) {
                this.GetTrusteeEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrusteeEmailOperationCompleted);
            }
            this.InvokeAsync("GetTrusteeEmail", new object[] {
                        username}, this.GetTrusteeEmailOperationCompleted, userState);
        }
        
        private void OnGetTrusteeEmailOperationCompleted(object arg) {
            if ((this.GetTrusteeEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrusteeEmailCompleted(this, new GetTrusteeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetTrusteeName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetTrusteeName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrusteeName(string username) {
            object[] results = this.Invoke("GetTrusteeName", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrusteeNameAsync(string username) {
            this.GetTrusteeNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetTrusteeNameAsync(string username, object userState) {
            if ((this.GetTrusteeNameOperationCompleted == null)) {
                this.GetTrusteeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrusteeNameOperationCompleted);
            }
            this.InvokeAsync("GetTrusteeName", new object[] {
                        username}, this.GetTrusteeNameOperationCompleted, userState);
        }
        
        private void OnGetTrusteeNameOperationCompleted(object arg) {
            if ((this.GetTrusteeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrusteeNameCompleted(this, new GetTrusteeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetTrusteeProfileDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetTrusteeProfileDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetTrusteeProfileDetails(string username) {
            object[] results = this.Invoke("GetTrusteeProfileDetails", new object[] {
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrusteeProfileDetailsAsync(string username) {
            this.GetTrusteeProfileDetailsAsync(username, null);
        }
        
        /// <remarks/>
        public void GetTrusteeProfileDetailsAsync(string username, object userState) {
            if ((this.GetTrusteeProfileDetailsOperationCompleted == null)) {
                this.GetTrusteeProfileDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrusteeProfileDetailsOperationCompleted);
            }
            this.InvokeAsync("GetTrusteeProfileDetails", new object[] {
                        username}, this.GetTrusteeProfileDetailsOperationCompleted, userState);
        }
        
        private void OnGetTrusteeProfileDetailsOperationCompleted(object arg) {
            if ((this.GetTrusteeProfileDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrusteeProfileDetailsCompleted(this, new GetTrusteeProfileDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:GetUpdates", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="GetUpdates_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetUpdates() {
            object[] results = this.Invoke("GetUpdates", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatesAsync() {
            this.GetUpdatesAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdatesAsync(object userState) {
            if ((this.GetUpdatesOperationCompleted == null)) {
                this.GetUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetUpdates", new object[0], this.GetUpdatesOperationCompleted, userState);
        }
        
        private void OnGetUpdatesOperationCompleted(object arg) {
            if ((this.GetUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatesCompleted(this, new GetUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:HRLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="HRLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRLeaveApplication(string employeeNo, string leaveType, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, string senderComments, string reliever, string relieverName) {
            object[] results = this.Invoke("HRLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRLeaveApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string senderComments, string reliever, string relieverName) {
            this.HRLeaveApplicationAsync(employeeNo, leaveType, appliedDays, startDate, endDate, returnDate, senderComments, reliever, relieverName, null);
        }
        
        /// <remarks/>
        public void HRLeaveApplicationAsync(string employeeNo, string leaveType, decimal appliedDays, System.DateTime startDate, System.DateTime endDate, System.DateTime returnDate, string senderComments, string reliever, string relieverName, object userState) {
            if ((this.HRLeaveApplicationOperationCompleted == null)) {
                this.HRLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("HRLeaveApplication", new object[] {
                        employeeNo,
                        leaveType,
                        appliedDays,
                        startDate,
                        endDate,
                        returnDate,
                        senderComments,
                        reliever,
                        relieverName}, this.HRLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnHRLeaveApplicationOperationCompleted(object arg) {
            if ((this.HRLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveApplicationCompleted(this, new HRLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:HRLeaveExtension", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="HRLeaveExtension_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HRLeaveExtension(string leaveNo, decimal appliedDays, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, string senderComments) {
            this.Invoke("HRLeaveExtension", new object[] {
                        leaveNo,
                        appliedDays,
                        endDate,
                        returnDate,
                        senderComments});
        }
        
        /// <remarks/>
        public void HRLeaveExtensionAsync(string leaveNo, decimal appliedDays, System.DateTime endDate, System.DateTime returnDate, string senderComments) {
            this.HRLeaveExtensionAsync(leaveNo, appliedDays, endDate, returnDate, senderComments, null);
        }
        
        /// <remarks/>
        public void HRLeaveExtensionAsync(string leaveNo, decimal appliedDays, System.DateTime endDate, System.DateTime returnDate, string senderComments, object userState) {
            if ((this.HRLeaveExtensionOperationCompleted == null)) {
                this.HRLeaveExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveExtensionOperationCompleted);
            }
            this.InvokeAsync("HRLeaveExtension", new object[] {
                        leaveNo,
                        appliedDays,
                        endDate,
                        returnDate,
                        senderComments}, this.HRLeaveExtensionOperationCompleted, userState);
        }
        
        private void OnHRLeaveExtensionOperationCompleted(object arg) {
            if ((this.HRLeaveExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveExtensionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ImprestRequisitionApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ImprestRequisitionApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImprestRequisitionApprovalRequest(string reqNo) {
            this.Invoke("ImprestRequisitionApprovalRequest", new object[] {
                        reqNo});
        }
        
        /// <remarks/>
        public void ImprestRequisitionApprovalRequestAsync(string reqNo) {
            this.ImprestRequisitionApprovalRequestAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void ImprestRequisitionApprovalRequestAsync(string reqNo, object userState) {
            if ((this.ImprestRequisitionApprovalRequestOperationCompleted == null)) {
                this.ImprestRequisitionApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestRequisitionApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("ImprestRequisitionApprovalRequest", new object[] {
                        reqNo}, this.ImprestRequisitionApprovalRequestOperationCompleted, userState);
        }
        
        private void OnImprestRequisitionApprovalRequestOperationCompleted(object arg) {
            if ((this.ImprestRequisitionApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestRequisitionApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:ImprestRequisitionCreate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="ImprestRequisitionCreate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestRequisitionCreate(string campusz, string campusName, int accType, string username, string reason) {
            object[] results = this.Invoke("ImprestRequisitionCreate", new object[] {
                        campusz,
                        campusName,
                        accType,
                        username,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestRequisitionCreateAsync(string campusz, string campusName, int accType, string username, string reason) {
            this.ImprestRequisitionCreateAsync(campusz, campusName, accType, username, reason, null);
        }
        
        /// <remarks/>
        public void ImprestRequisitionCreateAsync(string campusz, string campusName, int accType, string username, string reason, object userState) {
            if ((this.ImprestRequisitionCreateOperationCompleted == null)) {
                this.ImprestRequisitionCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestRequisitionCreateOperationCompleted);
            }
            this.InvokeAsync("ImprestRequisitionCreate", new object[] {
                        campusz,
                        campusName,
                        accType,
                        username,
                        reason}, this.ImprestRequisitionCreateOperationCompleted, userState);
        }
        
        private void OnImprestRequisitionCreateOperationCompleted(object arg) {
            if ((this.ImprestRequisitionCreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestRequisitionCreateCompleted(this, new ImprestRequisitionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:InsertApproverComments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="InsertApproverComments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertApproverComments(string documentNo, string approverID, string comments) {
            this.Invoke("InsertApproverComments", new object[] {
                        documentNo,
                        approverID,
                        comments});
        }
        
        /// <remarks/>
        public void InsertApproverCommentsAsync(string documentNo, string approverID, string comments) {
            this.InsertApproverCommentsAsync(documentNo, approverID, comments, null);
        }
        
        /// <remarks/>
        public void InsertApproverCommentsAsync(string documentNo, string approverID, string comments, object userState) {
            if ((this.InsertApproverCommentsOperationCompleted == null)) {
                this.InsertApproverCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertApproverCommentsOperationCompleted);
            }
            this.InvokeAsync("InsertApproverComments", new object[] {
                        documentNo,
                        approverID,
                        comments}, this.InsertApproverCommentsOperationCompleted, userState);
        }
        
        private void OnInsertApproverCommentsOperationCompleted(object arg) {
            if ((this.InsertApproverCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertApproverCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:InsertImprestRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="InsertImprestRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestRequisitionLines(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            object[] results = this.Invoke("InsertImprestRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId) {
            this.InsertImprestRequisitionLinesAsync(reqNo, atypes, accNo, accName, amount, userId, null);
        }
        
        /// <remarks/>
        public void InsertImprestRequisitionLinesAsync(string reqNo, string atypes, string accNo, string accName, decimal amount, string userId, object userState) {
            if ((this.InsertImprestRequisitionLinesOperationCompleted == null)) {
                this.InsertImprestRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestRequisitionLines", new object[] {
                        reqNo,
                        atypes,
                        accNo,
                        accName,
                        amount,
                        userId}, this.InsertImprestRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestRequisitionLinesOperationCompleted(object arg) {
            if ((this.InsertImprestRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestRequisitionLinesCompleted(this, new InsertImprestRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:LoginForUnchangedPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="LoginForUnchangedPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginForUnchangedPassword(string username, string password) {
            object[] results = this.Invoke("LoginForUnchangedPassword", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string username, string password) {
            this.LoginForUnchangedPasswordAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginForUnchangedPasswordAsync(string username, string password, object userState) {
            if ((this.LoginForUnchangedPasswordOperationCompleted == null)) {
                this.LoginForUnchangedPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForUnchangedPasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForUnchangedPassword", new object[] {
                        username,
                        password}, this.LoginForUnchangedPasswordOperationCompleted, userState);
        }
        
        private void OnLoginForUnchangedPasswordOperationCompleted(object arg) {
            if ((this.LoginForUnchangedPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForUnchangedPasswordCompleted(this, new LoginForUnchangedPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:PensionerStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="PensionerStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PensionerStatement(string fileNamefromApp, string pensionerNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, ref string bigtext) {
            object[] results = this.Invoke("PensionerStatement", new object[] {
                        fileNamefromApp,
                        pensionerNo,
                        startDate,
                        endDate,
                        bigtext});
            bigtext = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PensionerStatementAsync(string fileNamefromApp, string pensionerNo, System.DateTime startDate, System.DateTime endDate, string bigtext) {
            this.PensionerStatementAsync(fileNamefromApp, pensionerNo, startDate, endDate, bigtext, null);
        }
        
        /// <remarks/>
        public void PensionerStatementAsync(string fileNamefromApp, string pensionerNo, System.DateTime startDate, System.DateTime endDate, string bigtext, object userState) {
            if ((this.PensionerStatementOperationCompleted == null)) {
                this.PensionerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPensionerStatementOperationCompleted);
            }
            this.InvokeAsync("PensionerStatement", new object[] {
                        fileNamefromApp,
                        pensionerNo,
                        startDate,
                        endDate,
                        bigtext}, this.PensionerStatementOperationCompleted, userState);
        }
        
        private void OnPensionerStatementOperationCompleted(object arg) {
            if ((this.PensionerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PensionerStatementCompleted(this, new PensionerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:PortalOTP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="PortalOTP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PortalOTP(string username, string otpCode) {
            object[] results = this.Invoke("PortalOTP", new object[] {
                        username,
                        otpCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PortalOTPAsync(string username, string otpCode) {
            this.PortalOTPAsync(username, otpCode, null);
        }
        
        /// <remarks/>
        public void PortalOTPAsync(string username, string otpCode, object userState) {
            if ((this.PortalOTPOperationCompleted == null)) {
                this.PortalOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPortalOTPOperationCompleted);
            }
            this.InvokeAsync("PortalOTP", new object[] {
                        username,
                        otpCode}, this.PortalOTPOperationCompleted, userState);
        }
        
        private void OnPortalOTPOperationCompleted(object arg) {
            if ((this.PortalOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PortalOTPCompleted(this, new PortalOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RejectClaimReq", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RejectClaimReq_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectClaimReq(string documentNo, string userID) {
            this.Invoke("RejectClaimReq", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void RejectClaimReqAsync(string documentNo, string userID) {
            this.RejectClaimReqAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void RejectClaimReqAsync(string documentNo, string userID, object userState) {
            if ((this.RejectClaimReqOperationCompleted == null)) {
                this.RejectClaimReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectClaimReqOperationCompleted);
            }
            this.InvokeAsync("RejectClaimReq", new object[] {
                        documentNo,
                        userID}, this.RejectClaimReqOperationCompleted, userState);
        }
        
        private void OnRejectClaimReqOperationCompleted(object arg) {
            if ((this.RejectClaimReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectClaimReqCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portal:RejectImprest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", ResponseElementName="RejectImprest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectImprest(string documentNo, string userID) {
            this.Invoke("RejectImprest", new object[] {
                        documentNo,
                        userID});
        }
        
        /// <remarks/>
        public void RejectImprestAsync(string documentNo, string userID) {
            this.RejectImprestAsync(documentNo, userID, null);
        }
        
        /// <remarks/>
        public void RejectImprestAsync(string documentNo, string userID, object userState) {
            if ((this.RejectImprestOperationCompleted == null)) {
                this.RejectImprestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectImprestOperationCompleted);
            }
            this.InvokeAsync("RejectImprest", new object[] {
                        documentNo,
                        userID}, this.RejectImprestOperationCompleted, userState);
        }
        
        private void OnRejectImprestOperationCompleted(object arg) {
            if ((this.RejectImprestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectImprestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RejectLeaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RejectPVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RejectStoreReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RemoveImprestReqLineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void StaffPortalOTPCompletedEventHandler(object sender, StaffPortalOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StaffPortalOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StaffPortalOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TrusteeLoginCompletedEventHandler(object sender, TrusteeLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrusteeLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrusteeLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateBeneficiaryPassCompletedEventHandler(object sender, UpdateBeneficiaryPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBeneficiaryPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBeneficiaryPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateMemberAutoGenPasswordCompletedEventHandler(object sender, UpdateMemberAutoGenPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberAutoGenPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberAutoGenPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateMemberNSSFDateCompletedEventHandler(object sender, UpdateMemberNSSFDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberNSSFDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberNSSFDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateMemberPassCompletedEventHandler(object sender, UpdateMemberPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateMemberPasswordCompletedEventHandler(object sender, UpdateMemberPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateStaffPassCompletedEventHandler(object sender, UpdateStaffPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStaffPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStaffPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ValidTrusteeCompletedEventHandler(object sender, ValidTrusteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidTrusteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidTrusteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ValidateStartDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void VerifyCurrentPasswordCompletedEventHandler(object sender, VerifyCurrentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCurrentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCurrentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void VerifyCurrentStaffPasswordCompletedEventHandler(object sender, VerifyCurrentStaffPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCurrentStaffPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCurrentStaffPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getEmployeeNameCompletedEventHandler(object sender, getEmployeeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmployeeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmployeeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ApproveClaimReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ApproveImprestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ApproveLeaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ApprovePVCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ApproveStoreReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AvailableLeaveDaysCompletedEventHandler(object sender, AvailableLeaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AvailableLeaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AvailableLeaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CalcEndDateCompletedEventHandler(object sender, CalcEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CalcReturnDateCompletedEventHandler(object sender, CalcReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CancelClaimRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CancelImprestRequisitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CancelLeaveApplicationCompletedEventHandler(object sender, CancelLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChangeBeneficiaryPasswordCompletedEventHandler(object sender, ChangeBeneficiaryPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeBeneficiaryPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeBeneficiaryPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChangeMemberPasswordCompletedEventHandler(object sender, ChangeMemberPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeMemberPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeMemberPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChangeStaffPasswordCompletedEventHandler(object sender, ChangeStaffPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeStaffPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeStaffPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChangeTrusteePasswordCompletedEventHandler(object sender, ChangeTrusteePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeTrusteePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeTrusteePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckBeneficiaryLoginForUnchangedPassCompletedEventHandler(object sender, CheckBeneficiaryLoginForUnchangedPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBeneficiaryLoginForUnchangedPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBeneficiaryLoginForUnchangedPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckBeneficiaryLoginCompletedEventHandler(object sender, CheckBeneficiaryLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBeneficiaryLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBeneficiaryLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckBeneficiaryPasswordChangedCompletedEventHandler(object sender, CheckBeneficiaryPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBeneficiaryPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBeneficiaryPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckMemberLogin1CompletedEventHandler(object sender, CheckMemberLogin1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMemberLogin1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMemberLogin1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckMemberLoginForUnchangedPassCompletedEventHandler(object sender, CheckMemberLoginForUnchangedPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMemberLoginForUnchangedPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMemberLoginForUnchangedPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckMemberLoginCompletedEventHandler(object sender, CheckMemberLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMemberLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMemberLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckMemberPasswordChangedCompletedEventHandler(object sender, CheckMemberPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMemberPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMemberPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckStaffLoginForUnchangedPassCompletedEventHandler(object sender, CheckStaffLoginForUnchangedPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffLoginForUnchangedPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffLoginForUnchangedPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckStaffLoginCompletedEventHandler(object sender, CheckStaffLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckStaffPasswordChangedCompletedEventHandler(object sender, CheckStaffPasswordChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffPasswordChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffPasswordChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckStaffPortalLoginCompletedEventHandler(object sender, CheckStaffPortalLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStaffPortalLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStaffPortalLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckValidBeneficiaryNoCompletedEventHandler(object sender, CheckValidBeneficiaryNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidBeneficiaryNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidBeneficiaryNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckValidMemberNoCompletedEventHandler(object sender, CheckValidMemberNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidMemberNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidMemberNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CheckValidStaffNoCompletedEventHandler(object sender, CheckValidStaffNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidStaffNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidStaffNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ClaimRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ClaimRequisitionCreateCompletedEventHandler(object sender, ClaimRequisitionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimRequisitionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimRequisitionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ConfirmPortalOTPCompletedEventHandler(object sender, ConfirmPortalOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPortalOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPortalOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ConfirmStaffPortalOTPCompletedEventHandler(object sender, ConfirmStaffPortalOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmStaffPortalOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmStaffPortalOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DetermineIfIncludesNonWorkingCompletedEventHandler(object sender, DetermineIfIncludesNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIncludesNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIncludesNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string fLeaveCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DetermineIfIsNonWorkingCompletedEventHandler(object sender, DetermineIfIsNonWorkingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineIfIsNonWorkingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineIfIsNonWorkingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime bcDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string leave_Type {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DetermineLeaveReturnDateCompletedEventHandler(object sender, DetermineLeaveReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DetermineLeaveReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DetermineLeaveReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FnAttachmentsCompletedEventHandler(object sender, FnAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateBeneficiaryReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateBeneficiaryStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateLeaveStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateMemberDetailedStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateMemberStatement1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateMemberStatementNSSFCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GenerateMemberStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetBeneficiaryPFNoCompletedEventHandler(object sender, GetBeneficiaryPFNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeneficiaryPFNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeneficiaryPFNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetBeneficiaryProfileDetailsCompletedEventHandler(object sender, GetBeneficiaryProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBeneficiaryProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBeneficiaryProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetClaimsCountCompletedEventHandler(object sender, GetClaimsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCurrentPasswordCompletedEventHandler(object sender, GetCurrentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetDefaultLeaveDaysCompletedEventHandler(object sender, GetDefaultLeaveDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultLeaveDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultLeaveDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetExtensionStartDateCompletedEventHandler(object sender, GetExtensionStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExtensionStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExtensionStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetImprestCountCompletedEventHandler(object sender, GetImprestCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetLeaveAppCountCompletedEventHandler(object sender, GetLeaveAppCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveAppCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveAppCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberBeneficiariesCompletedEventHandler(object sender, GetMemberBeneficiariesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberBeneficiariesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberBeneficiariesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberEmailCompletedEventHandler(object sender, GetMemberEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberGenderCompletedEventHandler(object sender, GetMemberGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberMailCompletedEventHandler(object sender, GetMemberMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberNameCompletedEventHandler(object sender, GetMemberNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetMemberProfileDetailsCompletedEventHandler(object sender, GetMemberProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemberProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemberProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPayrollPeriodsCompletedEventHandler(object sender, GetPayrollPeriodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPayrollPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPayrollPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPostedLeavesCompletedEventHandler(object sender, GetPostedLeavesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostedLeavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostedLeavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProfilePictureCompletedEventHandler(object sender, GetProfilePictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfilePictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfilePictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetSponsorNameCompletedEventHandler(object sender, GetSponsorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSponsorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSponsorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetStafBfProfileDetailsCompletedEventHandler(object sender, GetStafBfProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStafBfProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStafBfProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetStaffMailCompletedEventHandler(object sender, GetStaffMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTrusteeEmailCompletedEventHandler(object sender, GetTrusteeEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrusteeEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrusteeEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTrusteeNameCompletedEventHandler(object sender, GetTrusteeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrusteeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrusteeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTrusteeProfileDetailsCompletedEventHandler(object sender, GetTrusteeProfileDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrusteeProfileDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrusteeProfileDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetUpdatesCompletedEventHandler(object sender, GetUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HRLeaveApplicationCompletedEventHandler(object sender, HRLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HRLeaveExtensionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ImprestRequisitionApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ImprestRequisitionCreateCompletedEventHandler(object sender, ImprestRequisitionCreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestRequisitionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestRequisitionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertApproverCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void InsertImprestRequisitionLinesCompletedEventHandler(object sender, InsertImprestRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void LoginForUnchangedPasswordCompletedEventHandler(object sender, LoginForUnchangedPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForUnchangedPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForUnchangedPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PensionerStatementCompletedEventHandler(object sender, PensionerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PensionerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PensionerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bigtext {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PortalOTPCompletedEventHandler(object sender, PortalOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PortalOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PortalOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RejectClaimReqCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RejectImprestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591